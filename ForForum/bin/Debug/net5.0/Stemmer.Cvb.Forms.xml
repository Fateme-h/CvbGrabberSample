<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Stemmer.Cvb.Forms</name>
    </assembly>
    <members>
        <member name="T:Stemmer.Cvb.Forms.Area2DExtensions">
            <summary>
            Extension methods for the <see cref="T:Stemmer.Cvb.Area2D"/> class.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Area2DExtensions.GetBoundingRect(Stemmer.Cvb.Area2D)">
            <summary>
            Extension method to get the bounding rect of the <see cref="T:Stemmer.Cvb.Area2D"/>
            as is (without any coordinate system modifications).
            </summary>
            <param name="a">The area instance.</param>
            <returns>Bounding rectangle.</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Components.StreamHandler">
            <summary>
            Helper component to handle acquisition on a stream.
            </summary>
            <remarks>
            <para>
            With this handler no <see cref="T:System.TimeoutException"/> errors occur. It 
            waits as long as an image arrives or acquisition is <see cref="M:Stemmer.Cvb.Forms.Components.StreamHandler.Stop"/>ed.
            </para><para>
            Also all events are delivered on the UI thread! If no events are 
            registered, nothing happens except that the acquisition is kept active
            and images are received and discarded. A <see cref="T:Stemmer.Cvb.Forms.Controls.Display"/>
            with a set <see cref="P:Stemmer.Cvb.Device.DeviceImage"/> will be updated, though.
            </para>
            </remarks>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Components.StreamHandler._unsubscriber">
            <summary>
            Unsubscriber to stop acquisition; <c>null</c> if nothing is subscribed.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Components.StreamHandler.UIContext">
            <summary>
            Captures the creating sync context (for components that is normally UI)
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Components.StreamHandler.#ctor">
            <summary>
            Creates the default acquisition <see cref="P:Stemmer.Cvb.Forms.Components.StreamHandler.Stream"/>  handler.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Components.StreamHandler.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Creates the default acquisition <see cref="P:Stemmer.Cvb.Forms.Components.StreamHandler.Stream"/> handler to be 
            embedded in the given <paramref name="container"/>
            </summary>
            <param name="container">Parent container.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Components.StreamHandler.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Components.StreamHandler.LoopIndexedStreams">
            <summary>
            Gets/sets whether <see cref="T:Stemmer.Cvb.Driver.IndexedStream"/>s are looped.
            </summary>
            <remarks>
            Default for <see cref="P:Stemmer.Cvb.Driver.IndexedStream.LoopObservers"/> is <c>false</c>.
            This value simply overwrites this property.
            </remarks>
            <value>
            The handler's default is <c>true</c> to behave like the 
            <i>Image ActiveX Control</i>.
            </value>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Components.StreamHandler.Stream">
            <summary>
            Gets/sets the stream to manage.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Components.StreamHandler.Start">
            <summary>
            Subscribes to the acquisition.
            </summary>
            <remarks>
            See <see cref="M:Stemmer.Cvb.Driver.Stream.Subscribe(System.IObserver{Stemmer.Cvb.Driver.StreamImage})"/> for 
            additional information.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Either an acquisition is 
            active or no <see cref="P:Stemmer.Cvb.Forms.Components.StreamHandler.Stream"/> has been set.</exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Components.StreamHandler.Stop">
            <summary>
            Unsubscribes from the acquisition stream.
            </summary>
            <remarks>
            See <see cref="M:Stemmer.Cvb.Driver.Stream.Subscribe(System.IObserver{Stemmer.Cvb.Driver.StreamImage})"/> for 
            additional information.
            </remarks>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Components.StreamHandler.Error">
            <summary>
            Raised if an error occurs while the acquisition is running.
            </summary>
            <remarks>
            <para>
            Use this for standard synchronous event processing. If you want 
            <see langword="async"/> processing, best use the
            <see cref="N:Stemmer.Cvb.Async"/> extensions or for a softer migration
            path <see cref="E:Stemmer.Cvb.Forms.Components.StreamHandler.ErrorAsync"/> .
            </para><para>
            <see cref="T:System.TimeoutException"/>s and 
            <see cref="T:System.OperationCanceledException"/>s are never reported via this
            handler. These operations are handled internally without exceptions
            being thrown.
            </para>
            </remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Components.StreamHandler.OnError(System.Exception)">
            <summary>
            Raises the <see cref="E:Stemmer.Cvb.Forms.Components.StreamHandler.Error"/> event.
            </summary>
            <param name="exception">Exception to notify on.</param>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Components.StreamHandler.ErrorAsync">
            <summary>
            Raised if an error occurs while the acquisition is running.
            </summary>
            <remarks>
            This is the same as the <see cref="E:Stemmer.Cvb.Forms.Components.StreamHandler.Error"/> event, but for 
            <see langword="async"/> processing. Better use
            <see cref="N:Stemmer.Cvb.Async"/> extension methods for a cleaner 
            solution.
            </remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Components.StreamHandler.OnErrorAsync(System.Exception)">
            <summary>
            Raises the <see cref="E:Stemmer.Cvb.Forms.Components.StreamHandler.ErrorAsync"/> event.
            </summary>
            <remarks>
            Even though the event is async, this method returns when all are 
            finished.
            </remarks>
            <param name="exception">Exception to notify on.</param>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Components.StreamHandler.NewImage">
            <summary>
            Raised when a new image arrives in memory.
            </summary>
            <remarks>
            <para>
            Use this for standard synchronous event processing. If you want 
            <see langword="async"/> processing, best use the
            <see cref="N:Stemmer.Cvb.Async"/> extensions or for a softer migration
            path <see cref="E:Stemmer.Cvb.Forms.Components.StreamHandler.NewImageAsync"/> .
            </para><para>
            The actual type depends on the <see cref="T:Stemmer.Cvb.Device"/> being used.
            </para>
            </remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Components.StreamHandler.OnNewImage(Stemmer.Cvb.Driver.StreamImage)">
            <summary>
            Raises the <see cref="E:Stemmer.Cvb.Forms.Components.StreamHandler.NewImage"/> event.
            </summary>
            <param name="image">Image to notify on.</param>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Components.StreamHandler.NewImageAsync">
            <summary>
            Raised when a new image arrives in memory.
            </summary>
            <remarks>
            This is the same as the <see cref="E:Stemmer.Cvb.Forms.Components.StreamHandler.NewImage"/> event, but for 
            <see langword="async"/> processing. Better use
            <see cref="N:Stemmer.Cvb.Async"/> extension methods for a cleaner 
            solution.
            </remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Components.StreamHandler.OnNewImageAsync(Stemmer.Cvb.Driver.StreamImage)">
            <summary>
            Raises the <see cref="E:Stemmer.Cvb.Forms.Components.StreamHandler.NewImageAsync"/> event.
            </summary>
            <remarks>
            Even though the event is async, this method returns when all are 
            finished.
            </remarks>
            <param name="image">Image to notify on.</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Components.StreamHandler.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Components.StreamHandler.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Components.ErrorEventArgs">
            <summary>
            Event arguments containing an <see cref="T:System.Exception"/>.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Components.ErrorEventArgs.#ctor(System.Exception)">
            <summary>
            Creates the event args with the given <paramref name="exception"/>.
            </summary>
            <param name="exception">Error to notify upon.</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Components.ErrorEventArgs.Error">
            <summary>
            Gets the <see cref="T:System.Exception"/> object describing the error.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Components.ImageEventArgs">
            <summary>
            Event arguments containing one <see cref="T:Stemmer.Cvb.Driver.StreamImage"/>.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Components.ImageEventArgs.#ctor(Stemmer.Cvb.Driver.StreamImage)">
            <summary>
            Creates the event args with the given <paramref name="image"/>.
            </summary>
            <param name="image">Image to notify upon.</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Components.ImageEventArgs.Image">
            <summary>
            Gets the image associated with the event.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Components.AsyncEventExtensions">
            <summary>
            Extension methods to invoke <see langword="async"/> events.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Components.AsyncEventExtensions.InvokeAsync``1(System.Func{System.Object,``0,System.Threading.Tasks.Task},System.Object,``0)">
            <summary>
            Extension method to invoke <see langword="async"/> events synchronously.
            </summary>
            <typeparam name="T"><see cref="T:System.EventArgs"/> type for event.</typeparam>
            <param name="handler">The event itself.</param>
            <param name="source">The notifying object.</param>
            <param name="args">The event arguments to deliver.</param>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Components.NamespaceDoc">
            <summary>
            The namespace <c>Stemmer.Cvb.Forms.Components</c> contains visual 
            components that may be used for creating Windows Forms applications
            in the Forms Designer.
            </summary>  
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.LeftMouseButtonPaintMode">
            <summary>
            Possible Overlay paint modes for the left mouse button.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.LeftMouseButtonPaintMode.SetOverlayMask">
            <summary>
            Painting sets overlay pixels
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.LeftMouseButtonPaintMode.EraseOverlayMask">
            <summary>
            Painting erases overlay pixels
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.CoordinateDisplayStyle">
            <summary>
            Options how to display the coordinate system when in select coordinate
            mode.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.CoordinateDisplayStyle.None">
            <summary>
            Do not display the coordinate system.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.CoordinateDisplayStyle.Wedge">
            <summary>
            Coordinate system is displayed as an angle.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.CoordinateDisplayStyle.Crosshair">
            <summary>
            Coordinate system origin is displayed as a crosshair.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.StatusLineStyle">
            <summary>
            Different ways the Cvb Display can handle the status line appearance.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.StatusLineStyle.Show">
            <summary>
            Always show the status line
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.StatusLineStyle.Hide">
            <summary>
            Never show the status line
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.StatusLineStyle.Auto">
            <summary>
            Show the status line as long as it has to display any content, other-
            wise hide it
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.StatusLineStyle.MouseOver">
            <summary>
            Hide the status line, but if the mouse hovers over the status line,
            then show it if there is content
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.BevelStyle">
            <summary>
            Different ways the bevels can be displayed.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.BevelStyle.None">
            <summary>
            No bevels to be displayed
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.BevelStyle.Inner">
            <summary>
            paint inner bevel
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.BevelStyle.Outer">
            <summary>
            paint outer bevel
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.BevelStyle.Both">
            <summary>
            paint both bevels
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.RightMouseButtonMode">
            <summary>
            Possible reactions of the Cvb display to the right mouse button
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.RightMouseButtonMode.None">
            <summary>
            display ignores the right mouse button
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.RightMouseButtonMode.Zoom">
            <summary>
            display uses the right mouse button for zooming in and out
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.LeftMouseButtonMode">
            <summary>
            Possible reactions of the Cvb display to the left mouse button
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.LeftMouseButtonMode.None">
            <summary>
            display will ignore the left mouse button
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.LeftMouseButtonMode.RubberBand">
            <summary>
            holding the left mouse button and dragging it inside the display 
            will show (and drag) a rubber band
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.LeftMouseButtonMode.DefineRectAoi">
            <summary>
            dragging inside the display will define a rectangular area of 
            interest
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.LeftMouseButtonMode.DefineArea2DAoi">
            <summary>
            dragging inside the display will define a parallelogram-shaped 
            Area2D-type of interest
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.LeftMouseButtonMode.DefineOrigin">
            <summary>
            clicking inside the display will modify the image's coordinate 
            system origin
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.LeftMouseButtonMode.DrawPoints">
            <summary>
            moving the mouse while holding the mouse button down will draw 
            points inside the display according to the currently selected 
            <see cref="P:Stemmer.Cvb.Forms.Controls.Display.LeftMouseButtonBehaviour"/>.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.LeftMouseButtonMode.DrawFill">
            <summary>
            clicking the mouse will flood fill according to the currently 
            selected <see cref="P:Stemmer.Cvb.Forms.Controls.Display.LeftMouseButtonBehaviour"/>.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.LeftMouseButtonMode.DrawLine">
            <summary>
            dragging the mouse will draw a straight line inside the image
            according to the currently selected 
            <see cref="P:Stemmer.Cvb.Forms.Controls.Display.LeftMouseButtonBehaviour"/>.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.LeftMouseButtonMode.DrawRectangle">
            <summary>
            dragging the mouse will draw a rectangular area inside the image
            according to the currently selected 
            <see cref="P:Stemmer.Cvb.Forms.Controls.Display.LeftMouseButtonBehaviour"/>.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.LeftMouseButtonMode.Pan">
            <summary>
            dragging the mouse will pan the view accordingly (only effective when
            the zoom factor is higher than the panorama zoom factor)
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.MouseWheelMode">
            <summary>
            Defines how the mouse wheel is being used by the display.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.MouseWheelMode.None">
            <summary>
            Mouse wheel is being ignored.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.MouseWheelMode.Zoom">
            <summary>
            Mouse wheel is being used for zooming in and out of the display.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.Display">
            <summary>
            .NET display control for Common Vision Blox
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.ApplyDefaults">
            <summary>
            Apply default settings to the display DLL object
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; 
            otherwise, false.</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.StatusLineExtent">
            <summary>
            Extent of the status line - needed for evaluation of the "MouseOver"
            mode of the display's status line
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DirectDrawDefault">
            <summary>
            Direct Draw default setting
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.BevelStyleDefault">
            <summary>
            Bevels default setting
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.CoordinateStyleDefault">
            <summary>
            Default coordinate display style
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.StatusLineStyleDefault">
            <summary>
            Default Status line style
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.MouseWheelModeDefault">
            <summary>
            Default mouse wheel mode
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.GainDefault">
            <summary>
            Default Gain level
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.OffsetDefault">
            <summary>
            Default Offset
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.ClientRectUsageMin">
            <summary>
            Minimum fraction of the client rect to be used for painting the Cvb 
            image.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.ClientRectUsageMax">
            <summary>
            Maximum fraction of the client rect to be used for painting the Cvb 
            image.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.MouseWheelMode">
            <summary>
            Sets/gets the current use of the mouse wheel.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.HighBitScaleMode">
            <summary>
            Mode defining the treatment of images with more than 8 bits per pixel.
            See <see cref="P:Stemmer.Cvb.Forms.Controls.Display.HighBitScaleMode"/> for a description of the available
            modes. Note that floating point accuracy images will always be shown
            as if the mode <code>HighBitScaleMode.ViewPort</code> was set, 
            regardless of your actual setting. Also note that the 
            <code>HighBitScaleMode.ViewPort</code> setting will cause the display
            to ignore the values of <see cref="P:Stemmer.Cvb.Forms.Controls.Display.Gain"/> and <see cref="P:Stemmer.Cvb.Forms.Controls.Display.Offset"/>.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.SuppressPaint">
            <summary>
            This property allows easy access to the same functionality "SetRedraw"
            offers in the MFC: By setting it to "true", repaints of the display
            are completely suppressed - until the properties is reset to "false".
            This can come in handy when assigning a new image to the display 
            without while wanting to preserve the zoom state.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.InstalledOverlays">
            <summary>
            The only instance of the collection of available overlay plug ins
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.Overlays">
            <summary>
            The overlays that are currently being displayed on the image
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.UseDirectDraw">
            <summary>
            Specifies whether DirectDraw or GDI functionality should be used to
            paint the display. Depending on hardware or driver versions switching 
            the paint functions may yield performance benefits.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.VSync">
            <summary>
            Enable or disable the VSync mode. VSync mode enabled means that 
            painting of the display contents is synchronized to the Monitor's 
            VSync signal. This helps suppress display artifacts that may appear if 
            the ratio of your camera's speed and the display rate is unfavorable. 
            However, VSync mode will also reduce the maximum achievable frame 
            rate.
            </summary>
            <remarks>Use this flag sparsely! Setting this property on more than 
            one Display per UI thread will deadlock your application! Note that 
            setting this property to true will only have an effect if DirectDraw
            is being used.</remarks>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.ManualOverlayRefresh">
            <summary>
            Enable or disable the overlay refresh mode. Take care because in
            Manual overlay refresh mode you may experience strange display 
            behavior if you do not refresh your display often enough. Manual 
            display refresh mode however yields better performance when adding or
            removing lots of display objects.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.ClientRectUsage">
            <summary>
            Get/Set the proportion of the control's client area to be used for painting the Cvb images.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.PaintMode">
            <summary>
            Toggling setting/erasing the overlay pixels when in one of the left button drawing modes.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.CoordinateDisplayStyle">
            <summary>
            Controls the way the coordinate system is being displayed when Left 
            button mode is in 'DefineOrigin'.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.ShowRuler">
            <summary>
            Toggle the display of the display ruler.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.PanoramaZoomFactor">
            <summary>
            The zoom factor that will be used in Panorama mode.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.ZoomCenter">
            <summary>
            Center of the zoom. Note that setting this property while
            <see cref="P:Stemmer.Cvb.Forms.Controls.Display.RestrictZoomPositions"/> is set to true may result in the
            zoom center being adjusted automatically.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.ZoomFactor">
            <summary>
            magnification factor currently used
            </summary>
            <exception cref="T:System.NullReferenceException">If the Image property is null
            </exception>
            <exception cref="T:System.ObjectDisposedException">If the object has already
            been disposed</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.RedrawOnPixelContentChanged">
            <summary>
            Gets/sets whether the image should redraw itself when the image data is
            changed.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.RestrictZoomPositions">
            <summary>
            Set the current state of the zoom restriction mode. When set to true, 
            the display automatically applies a restriction to the possible center 
            locations of the display zoom so that it cannot happen that a zoomed 
            display consists of up to 75% background when zooming into one of the 
            image's corners. This also means that when <see cref="P:Stemmer.Cvb.Forms.Controls.Display.ZoomCenter"/>
            is being set, the value of the <see cref="P:Stemmer.Cvb.Forms.Controls.Display.ZoomCenter"/> that can be 
            read back may not actually be the position that has just been set.    
            </summary>
            <exception cref="T:System.ObjectDisposedException">If this display has already
            been disposed.</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.ShowScrollbars">
            <summary>
            Toggle the display of scroll bars when in zoomed mode.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.ShowImageSize">
            <summary>
            Set to true to display the size of the current image in the display 
            status line.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.ShowZoomFactor">
            <summary>
            Set to true to display the size of the current image in the display 
            status line.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.ShowCursorPosition">
            <summary>
            Set to true to display the size of the current image in the display 
            status line.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.ShowGrayValue">
            <summary>
            Set to true to display the size of the current image in the display 
            status line.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.StatusLineText">
            <summary>
            Set to true to display the size of the current image in the display 
            status line.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.StatusLine">
            <summary>
            Selects how the display uses the status line.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.SelectedArea2D">
            <summary>
            Parallelogram-shaped area of interest. Setting this property will 
            show no effect while the LeftButtonMode is not set to 
            <see cref="F:Stemmer.Cvb.Forms.Controls.LeftMouseButtonMode.DefineArea2DAoi"/> 
            because only in this mode the Area2D AOI will be visible.
            </summary>
            <remarks>Note that the Area2D object is always set and used in image
            coordinates, not in pixel coordinates!</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">when trying to specify 
            an <see cref="T:Stemmer.Cvb.Area2D"/> where P0 is located outside the image.
            </exception>
            <exception cref="T:System.NullReferenceException">If the Image property is null
            </exception>
            <exception cref="T:System.ObjectDisposedException">If the Image has already
            been disposed</exception>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.selectedArea2D_">
            <summary>
            Remember: selectedArea2D_ *always* stores the area of interest in 
            PIXEL COORDINATES!
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.SelectedRectangle">
            <summary>
            Rectangular area of interest. Setting this property will show no 
            effect while the LeftButtonMode is not set to DefineRectangleAOI 
            because only in this mode the rectangular AOI will be visible.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.RightMouseButtonBehaviour">
            <summary>
            Display interaction with the right mouse button
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.LeftMouseButtonBehaviour">
            <summary>
            Display interaction with the left mouse button
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.Gain">
            <summary>
            Display gain.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.Offset">
            <summary>
            Display offset.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.Bevels">
            <summary>
            Bevel display style
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Display.Image">
            <summary>
            Image to be displayed
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.ClientToImage(System.Drawing.Point)">
            <summary>
            Convert client coordinates to image coordinates.
            </summary>
            <param name="pt">coordinate to be converted</param>
            <returns>converted coordinate</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.ImageToClient(System.Drawing.Point)">
            <summary>
            Convert image coordinates to display client coordinates.
            </summary>
            <param name="pt">coordinate to be converted</param>
            <returns>converted coordinate</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.Display.DisplayStatusLineStyle">
            <summary>
            Flags the display understands
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayStatusLineStyle.Empty">
            <summary>
            Show a status line even if it is empty
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayStatusLineStyle.ImgSize">
            <summary>
            Show the image size in the status line
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayStatusLineStyle.Scale">
            <summary>
            Show the current zoom factor in the status line
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayStatusLineStyle.CursorPos">
            <summary>
            Show the current cursor position in the status line
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayStatusLineStyle.GrayValue">
            <summary>
            Show the grey value of the pixel underneath the current cursor position
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.Display.DisplayWin32Message">
            <summary>
            Internally used Windows Message constants
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWin32Message.WM_UPDATE">
            <summary>
            base message through which the Cvb display reports its own events to
            this control and hence to the application
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam">
            <summary>
            The different WParam values that the Cvb display may use to report its
            events through Windows messages
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.MeasurementRubberDrag">
            <summary>
            User is dragging the rubber to do a measurement.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.MeasurementRubberDragged">
            <summary>
            User ended dragging the rubber to do a measurement
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.RectAoiDrag">
            <summary>
            Rectangular AOI is being dragged
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.RectAoiDragged">
            <summary>
            Dragging rectangular AOI finished
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.Area2DAoiDrag">
            <summary>
            TArea-AOI is being dragged
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.Area2DAoiDragged">
            <summary>
            Dragging TArea-AOI stopped
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.CoordinateSystemChanged">
            <summary>
            User clicked and changed the coordinate display
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.CoordinateSystemClicked">
            <summary>
            User clicked on the coordinate system
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.OverlayMaskChanged">
            <summary>
            Finished painting Overlays
            TODO: it is not certain yet whether we need this one
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.LabelClicked">
            <summary>
            User clicked on a label
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.LabelDrag">
            <summary>
            User is dragging a label
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.LabelDragged">
            <summary>
            User finished dragging a label
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.UserObjectClicked">
            <summary>
            User clicked on a User Object
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.UserObjectDrag">
            <summary>
            User is dragging a user object
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.UserObjectDragged">
            <summary>
            User finished dragging a user object
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.StatusLineUpdated">
            <summary>
            The display's status line content has changed
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.LabelMouseOver">
            <summary>
            The mouse was moved over the drag handle of a display label
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.DisplayWParam.UserObjectMouseOver">
            <summary>
            The mouse was moved over the drag handle of a user object
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.dragFlag_">
            <summary>
            Label that helps remap a singular "label dragged" to a "label clicked"
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.handle_">
            <summary>
            Internal display handle
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.dragStartLocation_">
            <summary>
            Point at which dragging last started (in client coordinates)
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.dragLocationNow_">
            <summary>
            Point at which the mouse currently is (in client coordinates)
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.LParamToPoint(System.IntPtr)">
            <summary>
            Converts a lParam value as returned by a mouse-related event to a point.
            </summary>
            <param name="lParam">LParam to be converted</param>
            <returns>the lParam in mouse coordinates</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.Display.ZoomDirection">
            <summary>
            Direction used for zooming
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.Display.MouseWheelZoomController">
            <summary>
            internal utility object that helps figure out the zoom factor to use
            when zooming in or out with the mouse wheel
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.MouseWheelZoomController.#cctor">
            <summary>
            static ctor
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.MouseWheelZoomController.#ctor">
            <summary>
            non-static ctor
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.MouseWheelZoomController.ZOOMFACTORMAX">
            <summary>
            Maximum allowed zoom factor.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.MouseWheelZoomController.ZOOMSTEPSPEROCTAVE">
            <summary>
            Number of zoom steps per octave (i.e. in an interval that covers 
            factor 2).
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.MouseWheelZoomController.ZOOMFACTORSTEP">
            <summary>
            Ratio between a zoom factor and its successor.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.MouseWheelZoomController.ZOOMFACTORSTEPMIN">
            <summary>
            Minimum zoom step.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.MouseWheelZoomController.zoomFactors_">
            <summary>
            The (specific) zoom factor series to be used.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.MouseWheelZoomController.CalculateZoomFactorTable(System.Double)">
            <summary>
            (Re)calculate the zoom factor table.
            </summary>
            <param name="panoramaZoomFactor">Panorama zoom factor to base the
            calculation on.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.MouseWheelZoomController.GetNextWheelZoomFactor(Stemmer.Cvb.Forms.Controls.Display.ZoomDirection,System.Double)">
            <summary>
            Determine the next zoom factor based on the current zoom factor and 
            the current zoom factor table. 	
            </summary>
            <param name="direction">zoom direction</param>
            <param name="currentZoomFactor">start value to use</param>
            <returns>Next zoom factor to use</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.MouseWheelZoomController.GetNextWheelZoomFactor(Stemmer.Cvb.Forms.Controls.Display.ZoomDirection,System.Double,System.Double)">
            <summary>
            Determine the next zoom factor based on the current zoom factor and 
            the current zoom factor table. 	
            </summary>
            <param name="direction">zoom direction</param>
            <param name="currentZoomFactor">start value to use</param>
            <param name="panoramaZoom">current panorama zoom factor</param>
            <returns>Next zoom factor to use</returns>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.mouseWheelZoomController_">
            <summary>
            Controller for mouse wheel zoom.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.HandleMouseWheel(System.Drawing.Point,System.Int16,System.Int16)">
            <summary>
            React to mouse wheel motions
            </summary>
            <param name="pos">location where the mouse wheel motion was detected
            </param>
            <param name="delta">amount of wheel motion</param>
            <param name="keyState">16 bit value indicating the keyboard key
            state during mouse wheel action</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.HandleMouseWheelZoom(System.Drawing.Point,System.Int32,System.Boolean)">
            <summary>
            Zoom in or out using the mouse wheel input.
            </summary>
            <param name="pos">location where the mouse wheel motion was detected
            </param>
            <param name="delta">amount of mouse wheel motion</param>
            <param name="slow">fast or slow scrolling</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.HandleStatusLine">
            <summary>
            Overload that does not need the mouse parameter
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.HandleStatusLine(System.Boolean)">
            <summary>
            Set the status line contents according to the settings of the relevant
            properties
            </summary>
            <param name="MouseOnStatusLine">true if the mouse is currently on the 
            status line, false otherwise.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.SelectedArea_Updated">
            <summary>
            The selected area has been updated - reflect that update on the 
            display
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.GetNextDisplayObjectID">
            <summary>
            Retrieves the next display object ID for the creating an object on the
            unmanaged display and increments the counter by one
            </summary>
            <returns></returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.HandBackDisplayObjectID(System.Int32)">
            <summary>
            Return a previously used display object ID.
            </summary>
            <param name="id">ID to be returned</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.availableOverlayIDs_">
            <summary>
            This stack holds a collection of reusable overlay object IDs
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.ColorToInt(System.Drawing.Color)">
            <summary>
            Properly convert a color into an integer value
            </summary>
            <param name="col">color to be converted</param>
            <returns>integer value that may be used in the unmanaged functions</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnBackColorChanged(System.EventArgs)">
            <summary>
            Background color of the parent class has changed. Reflect the change
            in the display as well.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.CoordinateSystemChanged">
            <summary>
            Event that will be fired when the coordinate system has been changed 
            by clicking into the display.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.CoordinateSystemClicked">
            <summary>
            Event that will be fired when the coordinate system has been left-clicked.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.OverlayMaskChanged">
            <summary>
            Event that will be fired whenever the user has modified the overlay 
            information of the image via mouse-painting.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.RubberDragged">
            <summary>
            Event that will be when the user finished rubber measurements
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.RubberDrag">
            <summary>
            Event that will be when the user drags the rubber band to perform
            measurements on the display
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.RectAoiDrag">
            <summary>
            Event that will be raised when the Rectangular AOI changed and the user
            still holds down the left mouse button. 
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.RectAoiDragged">
            <summary>
            Event that will be raised when the Rectangular AOI changed and the user
            no longer holds down the left mouse button (dragging finished)
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.Area2DAoiDrag">
            <summary>
            Event that will be raised when the Parallelogram AOI changed and the 
            user still holds down the left mouse button. 
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.Area2DAoiDragged">
            <summary>
            Event that will be raised when the Parallelogram AOI changed and the 
            user no longer holds down the left mouse button (dragging finished)
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.LabelClicked">
            <summary>
            Event that will be raised when the a display label has been clicked.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.LabelDrag">
            <summary>
            Event that will be raised while a display label is being dragged.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.LabelDragged">
            <summary>
            Event that will be raised when a display label is no longer being dragged.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.OverlayPluginClicked">
            <summary>
            Event that will be raised when the a display overlay has been clicked.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.OverlayPluginDrag">
            <summary>
            Event that will be raised while a display overlay is being dragged.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.OverlayPluginDragged">
            <summary>
            Event that will be raised when a display overlay is no longer being dragged.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.UserOverlayClicked">
            <summary>
            Event that will be raised when the a display overlay has been clicked.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.UserOverlayDrag">
            <summary>
            Event that will be raised while a display overlay is being dragged.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.UserOverlayDragged">
            <summary>
            Event that will be raised when a display overlay is no longer being dragged.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.StatusLineUpdated">
            <summary>
            Event that will be raised when the display's status line has been updated.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.LabelMouseOver">
            <summary>
            Event that will be raised when the the mouse cursor is located over a display label.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.OverlayPluginMouseOver">
            <summary>
            Event that will be raised when the the mouse cursor is located over an overlay plugin.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.Display.UserOverlayMouseOver">
            <summary>
            Event that will be raised when the the mouse cursor is located over an user overlay.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Route those messages that may be handled by the CVCDisp.dll.
            </summary>
            <param name="m">Windows Message</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.WndProcDisplay(System.Windows.Forms.Message@)">
            <summary>
            Sub-Window procedure that processes the messages that are specific to 
            the Cvb display.
            </summary>
            <param name="m">Windows message structure</param>
            <returns>true if the message has been handled by the display DLL,
            false otherwise</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.UpdateAoi">
            <summary>
            Internal method to update the selected area from what the display
            show currently
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.Display.RubberData">
            <summary>
            The struct that the display DLL uses to report the rubber event data.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.GetRubberData(System.IntPtr)">
            <summary>
            Retrieve the rubber drag data handed out by the display DLL.
            </summary>
            <param name="lParam">lParam as passed by the display</param>
            <returns>rubber data structure</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.Display.MouseOverData">
            <summary>
            The struct that the display DLL uses to report the MouseOver event
            data.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.GetMouseOverData(System.IntPtr)">
            <summary>
            Retrieve the mouse over data that the display has passed.
            </summary>
            <param name="lParam">lParam as passed by the display.</param>
            <returns>mouse over data structure</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnLabelMouseOver(Stemmer.Cvb.Forms.Controls.Display.MouseOverData)">
            <summary>
            Process a mouse over event.
            </summary>
            <param name="data">event data</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnLabelMouseOver(Stemmer.Cvb.Forms.Controls.LabelEventArgs)">
            <summary>
            Overrideable function that takes care of the LabelMouseOver event.
            </summary>
            <param name="args">Event argument.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnOverlayMouseOver(Stemmer.Cvb.Forms.Controls.Display.MouseOverData)">
            <summary>
            Process a mouse over event.
            </summary>
            <param name="data">event data</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnOverlayPluginMouseOver(Stemmer.Cvb.Forms.Controls.OverlayPluginMouseOverEventArgs)">
            <summary>
            Overrideable function that takes care of the OverlayPluginMouseOver
            event.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnUserOverlayMouseOver(Stemmer.Cvb.Forms.Controls.UserOverlayMouseOverEventArgs)">
            <summary>
            Overrideable function that takes care of the UserOverlayMouseOver
            event.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnStatusLineUpdated(System.IntPtr)">
            <summary>
            Status line update handler.
            </summary>
            <param name="lParam">lParam as received from the display</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnStatusLineUpdated(Stemmer.Cvb.Forms.Controls.StatusLineUpdatedEventArgs)">
            <summary>
            Overrideable function that takes care of the StatusLineUpdated event.
            </summary>
            <param name="args">Event argument.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnArea2DAoiDrag(Stemmer.Cvb.Forms.Controls.Area2DDragEventArgs)">
            <summary>
            Overrideable function that takes care of the RectangleAOIDrag event.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnArea2DAoiDragged(Stemmer.Cvb.Forms.Controls.Area2DDragEventArgs)">
            <summary>
            Overrideable function that takes care of the RectangleAOIChanged event.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnRectAoiDrag(Stemmer.Cvb.Forms.Controls.RectDragEventArgs)">
            <summary>
            Overrideable function that takes care of the RectangleAOIDrag event.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnRectangleAoiDragged(Stemmer.Cvb.Forms.Controls.RectDragEventArgs)">
            <summary>
            Overrideable function that takes care of the RectangleAOIChanged event.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnOverlayClicked(System.Int32)">
            <summary>
            Raise the overlay clicked event with the overlay that was clicked
            </summary>
            <param name="overlayID">overlay id</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnOverlayPluginClicked(Stemmer.Cvb.Forms.Controls.OverlayPluginEventArgs)">
            <summary>
            Overrideable function that takes care of the OverlayPluginClicked event.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnUserOverlayClicked(Stemmer.Cvb.Forms.Controls.UserOverlayEventArgs)">
            <summary>
            Overrideable function that takes care of the OverlayClicked event.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnOverlayDrag(System.Int32)">
            <summary>
            Raise the overlay clicked event with the overlay that was clicked
            </summary>
            <param name="overlayID">overlay id</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnOverlayPluginDrag(Stemmer.Cvb.Forms.Controls.OverlayPluginEventArgs)">
            <summary>
            Overrideable function that takes care of the OverlayClicked 
            event.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnUserOverlayDrag(Stemmer.Cvb.Forms.Controls.UserOverlayEventArgs)">
            <summary>
            Overrideable function that takes care of the OverlayClicked 
            event.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnOverlayDragged(System.Int32)">
            <summary>
            Raise the overlay clicked event with the overlay that was clicked
            </summary>
            <param name="overlayID">overlay id</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnOverlayPluginDragged(Stemmer.Cvb.Forms.Controls.OverlayPluginEventArgs)">
            <summary>
            Overrideable function that takes care of the OverlayDragged event.
            </summary>
            <param name="args">Event argument.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnUserOverlayDragged(Stemmer.Cvb.Forms.Controls.UserOverlayEventArgs)">
            <summary>
            Overrideable function that takes care of the OverlayDragged event.
            </summary>
            <param name="args">Event argument.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnLabelClicked(System.Int32)">
            <summary>
            Raise the label clicked event with the label that was clicked
            </summary>
            <param name="labelID">label id</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnLabelClicked(Stemmer.Cvb.Forms.Controls.LabelEventArgs)">
            <summary>
            Overrideable function that takes care of the LabelClicked event.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnLabelDrag(System.Int32)">
            <summary>
            Raise the label clicked event with the label that was clicked
            </summary>
            <param name="labelID"></param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnLabelDrag(Stemmer.Cvb.Forms.Controls.LabelEventArgs)">
            <summary>
            Overrideable function that takes care of the LabelClicked event.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnLabelDragged(System.Int32)">
            <summary>
            Raise the label clicked event with the label that was clicked
            </summary>
            <param name="labelID"></param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnLabelDragged(Stemmer.Cvb.Forms.Controls.LabelEventArgs)">
            <summary>
            Overrideable function that takes care of the LabelClicked event.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnRubberDrag(Stemmer.Cvb.Forms.Controls.RubberMeasurementEventArgs)">
            <summary>
            Utility function that helps prevent a lot of work when no event 
            handler is registered for the RubberMeasurement event.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnRubberDragged(Stemmer.Cvb.Forms.Controls.RubberMeasurementEventArgs)">
            <summary>
            Utility function that helps suppress a lot of work when no event 
            handler is registered for the RubberMeasurementsFinished event.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnRubberMeasurement(Stemmer.Cvb.Forms.Controls.RubberMeasurementEventArgs)">
            <summary>
            Overrideable function that takes care of the RubberMeasurement event.
            </summary>
            <param name="args">Event argument.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnRubberMeasurementFinished(Stemmer.Cvb.Forms.Controls.RubberMeasurementEventArgs)">
            <summary>
            Overrideable function that takes care of the RubberMeasurementsFinished
            event.
            </summary>
            <param name="args">Event argument.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnOverlayMaskChanged(System.EventArgs)">
            <summary>
            Overrideable function that takes care of the PaintingFinished event.
            </summary>
            <param name="args">Event argument.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnCoordinateSystemClicked(System.EventArgs)">
            <summary>
            Overrideable function that takes care of the CoordinateSystemClicked 
            event.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.OnCoordinateSystemChanged(System.EventArgs)">
            <summary>
            Overrideable function that takes care of the CoordinateSystemChanged 
            event.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.Display.ZoomState">
            <summary>
            Class that memorizes a <see cref="T:Stemmer.Cvb.Forms.Controls.Display"/>'s zoom state for the purpose of later
            on restoring that state.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.ZoomState.#ctor(Stemmer.Cvb.Forms.Controls.Display)">
            <summary>
            Constructor.
            </summary>
            <param name="disp">Display for which to create a zoom state 
            object.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.ZoomState.Restore">
            <summary>
            Restore the memorized zoom state.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.ZoomState.disp_">
            <summary>
            memorized display
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.ZoomState.zoomCenter_">
            <summary>
            the memorized zoom center
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.ZoomState.zoomFactor_">
            <summary>
            the memorized zoom factor
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.Display.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Display.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.RectDragEventArgs">
            <summary>
            Event argument class for both Rectangular AOI related events
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.RectDragEventArgs.#ctor(Stemmer.Cvb.Rect)">
            <summary>
            Initializing constructor
            </summary>
            <param name="arg">currently selected rectangle</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.RectDragEventArgs.Rect">
            <summary>
            The current values of the selected rectangle.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.Area2DDragEventArgs">
            <summary>
            Event argument class for both Rectangular AOI related events
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.Area2DDragEventArgs.#ctor(Stemmer.Cvb.Area2D)">
            <summary>
            Initializing constructor
            </summary>
            <param name="arg">currently selected rectangle</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.Area2DDragEventArgs.Area2D">
            <summary>
            The current values of the selected rectangle.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.RubberMeasurementEventArgs">
            <summary>
            Event argument class for measurement-rubber-related event
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.RubberMeasurementEventArgs.#ctor(System.Drawing.Point,System.Drawing.Point,System.Double,System.Double)">
            <summary>
            CVCDisp.dll-compatible ctor. Will use the parameters as passed by the
            DLL - even if they are inconsistent.
            </summary>
            <param name="startPoint">start point</param>
            <param name="endPoint">end point</param>
            <param name="distance">distance</param>
            <param name="angle">angle</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.RubberMeasurementEventArgs.#ctor(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Default constructor for Rubber Measurement event arguments
            </summary>
            <param name="startPoint">start point of the rubber</param>
            <param name="endPoint">end point of the rubber</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.RubberMeasurementEventArgs.StartPoint">
            <summary>
            Start point of the rubber measurement in image coordinates
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.RubberMeasurementEventArgs.EndPoint">
            <summary>
            End point of the rubber measurement in image coordinates.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.RubberMeasurementEventArgs.Distance">
            <summary>
            Distance (in pixels) between the two points
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.RubberMeasurementEventArgs.Angle">
            <summary>
            Angle of the rubber band relative to the x axis (radians).
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.LabelEventArgs">
            <summary>
            Event argument class for label-related events
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.LabelEventArgs.#ctor(Stemmer.Cvb.Forms.Overlays.DisplayLabel)">
            <summary>
            ctor
            </summary>
            <param name="label">the label to which the event refers</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.LabelEventArgs.Label">
            <summary>
            The label to which the event refers
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.OverlayEventArgs">
            <summary>
            Event argument class for overlay-related events
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.OverlayEventArgs.#ctor(Stemmer.Cvb.Forms.Overlays.OverlayBase)">
            <summary>
            ctor
            </summary>
            <param name="overlay">the overlay to which the event refers</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.OverlayEventArgs.overlay_">
            <summary>
            The base overlay object.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.OverlayPluginEventArgs">
            <summary>
            Event that refers to overlay plugins.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.OverlayPluginEventArgs.#ctor(Stemmer.Cvb.Forms.Overlays.OverlayPluginBase)">
            <summary>
            ctor
            </summary>
            <param name="overlay">the overlay plugin to which the event refers</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.OverlayPluginEventArgs.Overlay">
            <summary>
            object to which the event refers.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.UserOverlayEventArgs">
            <summary>
            Event that refers to user overlays.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.UserOverlayEventArgs.#ctor(Stemmer.Cvb.Forms.Overlays.UserOverlay)">
            <summary>
            ctor
            </summary>
            <param name="overlay">the overlay plugin to which the event refers</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.UserOverlayEventArgs.Overlay">
            <summary>
            object to which the event refers.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.OverlayPluginMouseOverEventArgs">
            <summary>
            Event that refers to overlay plugin mouse over notifications.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.OverlayPluginMouseOverEventArgs.#ctor(Stemmer.Cvb.Forms.Overlays.OverlayPluginBase,System.Int32)">
            <summary>
            ctor
            </summary>
            <param name="overlay">over to which this event refers</param>
            <param name="dragHandle">drag handle over which the mouseover happened
            </param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.OverlayPluginMouseOverEventArgs.Vertex">
            <summary>
            Vertex over which the mouse is currently located (-1 if the mouse 
            is over the gravity center drag handle).
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.UserOverlayMouseOverEventArgs">
            <summary>
            Event that refers to user object mouse over notifications.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.UserOverlayMouseOverEventArgs.#ctor(Stemmer.Cvb.Forms.Overlays.UserOverlay,System.Int32)">
            <summary>
            ctor
            </summary>
            <param name="overlay">over to which this event refers</param>
            <param name="dragHandle">drag handle over which the mouseover happened
            </param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.UserOverlayMouseOverEventArgs.Vertex">
            <summary>
            Vertex over which the mouse is currently located (-1 if the mouse 
            is over the gravity center drag handle).
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.StatusLineUpdatedEventArgs">
            <summary>
            Event that indicates a change in the status line of a display.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.StatusLineUpdatedEventArgs.#ctor(System.String)">
            <summary>
            ctor
            </summary>
            <param name="newStatus">new status line string</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.StatusLineUpdatedEventArgs.StatusLineText">
            <summary>
            New status line text.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.GenApiGrid">
            <summary>
            GenICam GenApi Grid control.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.GenApiGrid.#ctor">
            <summary>
            Creates the grid control.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.GenApiGrid.MaxVisibility">
            <summary>
            Gets/sets the maximum visibility of features to show.
            </summary>
            <value>
            Default is <see cref="F:Stemmer.Cvb.Forms.Controls.MaxVisibility.Beginner"/>.
            </value>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.GenApiGrid.NodeMap">
            <summary>
            Get/sets the <see cref="T:Stemmer.Cvb.GenApi.NodeMap"/> to show.
            </summary>
            <value>
            <c>null</c> to show an empty grid (default).
            </value>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.GenApiGrid.VisibleItems">
            <summary>
            Gets all visible <see cref="T:Stemmer.Cvb.GenApi.Node"/>s in the order they are shown
            in the grid.
            </summary>
            <remarks>
            <see cref="T:Stemmer.Cvb.GenApi.Node"/>s can be contained more than once as they may be 
            shown in different <see cref="T:Stemmer.Cvb.GenApi.CategoryNode"/>s. Also the contents may
            change in-between two calls if the the viewport was scrolled or 
            category were collapsed/expanded.
            </remarks>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.GenApiGrid.SelectedIndex">
            <summary>
            Gets/sets the selected <see cref="T:Stemmer.Cvb.GenApi.Node"/> via its index (based on
            <see cref="P:Stemmer.Cvb.Forms.Controls.GenApiGrid.VisibleItems"/>).
            </summary>
            <value>
            Zero based positive index of the selected node; negative for none 
            selected.
            </value>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.GenApiGrid.SelectedItem">
            <summary>
            Gets/sets the selected <see cref="T:Stemmer.Cvb.GenApi.Node"/>.
            </summary>
            <remarks>
            If the given <see cref="T:Stemmer.Cvb.GenApi.Node"/> <paramref name="value"/> is present 
            more than once in the grid, the first occurrence is selected.
            </remarks>
            <value>
            <c>null</c> for none selected.
            </value>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.GenApiGrid.SelectionChanged">
            <summary>
            Raised when the selection has been changed in the grid.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.GenApiGrid.OnSelectionChanged">
            <summary>
            Raises the <see cref="E:Stemmer.Cvb.Forms.Controls.GenApiGrid.SelectionChanged"/> event.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.GenApiGrid.PollingEnabled">
            <summary>
            Gets/sets whether automatic feature polling is enabled.
            </summary>
            <value>
            Default is <c>true</c>.
            </value>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.GenApiGrid.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.GenApiGrid.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.GenApiGrid.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.MaxVisibility">
            <summary>
            Defines which features should be shown in the <see cref="T:Stemmer.Cvb.Forms.Controls.GenApiGrid"/>.
            </summary>
            <remarks>
            Higher levels include lower ones: e.g. <see cref="F:Stemmer.Cvb.Forms.Controls.MaxVisibility.Expert"/> includes all
            <see cref="F:Stemmer.Cvb.Forms.Controls.MaxVisibility.Beginner"/> features.
            </remarks>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.MaxVisibility.Beginner">
            <summary>
            Simple feature usable by everybody.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.MaxVisibility.Expert">
            <summary>
            More complex feature that requires deeper knowledge about the feature.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.MaxVisibility.Guru">
            <summary>
            Very complex and/or dangerous feature.
            </summary>
            <remarks>
            <c>Attention:</c> Wrong usage of these features may damage the device.
            </remarks>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.NativeGenApiGrid">
            <summary>
            Wrapper for the Win32 GenApiGrid control.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.NativeGenApiGrid.#ctor(Stemmer.Cvb.Forms.Controls.GenApiGrid)">
            <summary>
            Creates the native GenApiGrid control for the given 
            <paramref name="parent"/>.
            </summary>
            <param name="parent">The public parent control.</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.NativeGenApiGrid.IsDisposed">
            <summary>
            Gets whether this control is currently in a disposed state.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Controls.NativeGenApiGrid.Parent">
            <summary>
            The parent control.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.NativeGenApiGrid.DescriptionSplitterPos">
            <summary>
            Position of the splitter between the features and the description.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Controls.NativeGenApiGrid.GetVisibleNodeNames">
            <summary>
            Gets all the node names displayed in the grid in the order the are
            shown in the grid.
            </summary>
            <returns>>Array containing the names of all displayed nodes.</returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.NativeGenApiGrid.GridHandle">
            <summary>
            Gets the native handle of the grid object itself.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.NativeGenApiGrid.MaxVisibility">
            <summary>
            Gets/sets the <see cref="T:Stemmer.Cvb.Forms.Controls.MaxVisibility"/>.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.NativeGenApiGrid.NodeMap">
            <summary>
            Gets/sets the node map.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.NativeGenApiGrid.PollingEnabled">
            <summary>
            Gets/sets whether polling is enabled.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.NativeGenApiGrid.SelectedIndex">
            <summary>
            Gets/sets the selected node index.
            </summary>
            <value>
            Smaller than zero if nothing is selected.
            </value>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Controls.NativeGenApiGrid.SelectionChanged">
            <summary>
            Raised when the selection changes.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Controls.NativeGenApiGrid.Size">
            <summary>
            Gets/sets the size of this control.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Controls.NamespaceDoc">
            <summary>
            The namespace <c>Stemmer.Cvb.Forms.Controls</c> contains the GDI
            and DirectDraw/Direct3D based Common Vision Blox display and the 
            GenApi grid as components that may be used in Forms applications or
            inside a FormsHost container or in the Visual Studio Forms designer,
            along with supporting type definitions.
            </summary>  
        </member>
        <member name="T:Stemmer.Cvb.Forms.Clipboard">
            <summary>
            Mimics the class <see cref="T:System.Windows.Forms.Clipboard"/> by
            additional static functions.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Clipboard.SetImage(Stemmer.Cvb.Image)">
            <summary>
            Copy a <see cref="T:Stemmer.Cvb.Image"/> object to the clipboard.
            </summary>
            <param name="image">image to be copied to the clipboard.</param>
            <exception cref="T:System.ArgumentNullException">if the 
            <paramref name="image"/> parameter is null</exception>
            <exception cref="T:System.ObjectDisposedException">if the 
            <paramref name="image"/> has already been disposed</exception>
            <exception cref="T:System.Runtime.InteropServices.ExternalException">if copying to the clipboard 
            failed</exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Clipboard.GetImage">
            <summary>
            Get a <see cref="T:Stemmer.Cvb.Image"/> currently stored in the clipboard.
            </summary>
            <returns>image from the clipboard</returns>
            <exception cref="T:System.Runtime.InteropServices.ExternalException">if getting the image from the
            clipboard failed</exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Clipboard.ContainsImage">
            <summary>
            Check whether the clipboard contains data that can be directly pasted
            into a CVB image.
            </summary>
            <returns><c>true</c> if the application's clipboard currently
            contains a Common Vision Blox compatible image, <c>false</c> 
            otherwise.</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.FileDialogs">
            <summary>
            Container class for utility functions for file dialogs.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.ConfigureAndShowDialog(System.Windows.Forms.IWin32Window,System.Windows.Forms.FileDialog,System.String,System.String,System.String)">
            <summary>
            Utility function that covers those things that are identical to 
            loading and saving.
            </summary>
            <param name="owner"></param>
            <param name="dlg"></param>
            <param name="title"></param>
            <param name="filter"></param>
            <param name="defaultExtension"></param>
            <returns></returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.LoadByDialog``1(Stemmer.Cvb.Utilities.LoadConstructor{``0},System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.Windows.Forms.DialogResult@)">
            <summary>
            Generic file load function.
            </summary>
            <typeparam name="TObject">Type of the object to be loaded.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="owner">Window that owns the modal dialog.</param>
            <param name="title">Title of the dialog.</param>
            <param name="filter">File type filter.</param>
            <param name="defaultExtension">Default extension to append to the file
            name if no extension was specified.</param>
            <param name="dlgRes">Dialog result.</param>
            <returns>Loaded object (or null if loading fails).</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.LoadByDialog``1(Stemmer.Cvb.Utilities.LoadConstructor{``0},System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.DialogResult@)">
            <summary>
            Generic file load function.
            </summary>
            <typeparam name="TObject">Type of the object to be loaded.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="owner">Window that owns the modal dialog.</param>
            <param name="title">Title of the dialog.</param>
            <param name="filter">File type filter.</param>
            <param name="dlgRes">Dialog result.</param>
            <returns>Loaded object (or null if loading fails).</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.LoadByDialog``1(Stemmer.Cvb.Utilities.LoadConstructor{``0},System.String,System.String,System.Windows.Forms.DialogResult@)">
            <summary>
            Generic file load function.
            </summary>
            <typeparam name="TObject">Type of the object to be loaded.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="title">Title of the dialog.</param>
            <param name="filter">File type filter.</param>
            <param name="dlgRes">Dialog result.</param>
            <returns>Loaded object (or null if loading fails).</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.LoadByDialog``1(Stemmer.Cvb.Utilities.LoadConstructor{``0},System.String,System.Windows.Forms.DialogResult@)">
            <summary>
            Generic file load function.
            </summary>
            <typeparam name="TObject">Type of the object to be loaded.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="filter">File type filter.</param>
            <param name="dlgRes">Dialog result.</param>
            <returns>Loaded object (or null if loading fails).</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.LoadByDialog``1(Stemmer.Cvb.Utilities.LoadConstructor{``0},System.Windows.Forms.DialogResult@)">
            <summary>
            Generic file load function.
            </summary>
            <typeparam name="TObject">Type of the object to be loaded.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="dlgRes">Dialog result.</param>
            <returns>Loaded object (or null if loading fails).</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.LoadByDialog``1(Stemmer.Cvb.Utilities.LoadConstructor{``0},System.Windows.Forms.IWin32Window,System.String,System.String)">
            <summary>
            Generic file load function.
            </summary>
            <typeparam name="TObject">Type of the object to be loaded.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="owner">Window that owns the modal dialog.</param>
            <param name="title">Title of the dialog.</param>
            <param name="filter">File type filter.</param>
            <returns>Loaded object (or null if loading fails).</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.LoadByDialog``1(Stemmer.Cvb.Utilities.LoadConstructor{``0},System.String,System.String)">
            <summary>
            Generic file load function.
            </summary>
            <typeparam name="TObject">Type of the object to be loaded.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="title">Title of the dialog.</param>
            <param name="filter">File type filter.</param>
            <returns>Loaded object (or null if loading fails).</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.LoadByDialog``1(Stemmer.Cvb.Utilities.LoadConstructor{``0},System.String)">
            <summary>
            Generic file load function.
            </summary>
            <typeparam name="TObject">Type of the object to be loaded.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="filter">File type filter.</param>
            <returns>Loaded object (or null if loading fails).</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.LoadByDialog``1(Stemmer.Cvb.Utilities.LoadConstructor{``0})">
            <summary>
            Generic file load function.
            </summary>
            <typeparam name="TObject">Type of the object to be loaded.</typeparam>
            <param name="f">Load delegate.</param>
            <returns>Loaded object (or null if loading fails).</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.SaveByDialog``1(``0,Stemmer.Cvb.Utilities.SaveFunction{``0},System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.Windows.Forms.DialogResult@)">
            <summary>
            Generic file save function.
            </summary>
            <typeparam name="TObject">Type of the object to be saved.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="owner">Window that owns the modal dialog.</param>
            <param name="title">Title of the dialog.</param>
            <param name="filter">File type filter.</param>
            <param name="defaultExtension">Default extension to append to the file
            name if no extension was specified.</param>
            <param name="dlgRes">Dialog result.</param>
            <param name="obj">Object to be saved.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.SaveByDialog``1(``0,Stemmer.Cvb.Utilities.SaveFunction{``0},System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.DialogResult@)">
            <summary>
            Generic file save function.
            </summary>
            <typeparam name="TObject">Type of the object to be saved.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="owner">Window that owns the modal dialog.</param>
            <param name="title">Title of the dialog.</param>
            <param name="filter">File type filter.</param>
            <param name="dlgRes">Dialog result.</param>
            <param name="obj">Object to be saved.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.SaveByDialog``1(``0,Stemmer.Cvb.Utilities.SaveFunction{``0},System.String,System.String,System.Windows.Forms.DialogResult@)">
            <summary>
            Generic file save function.
            </summary>
            <typeparam name="TObject">Type of the object to be saved.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="title">Title of the dialog.</param>
            <param name="filter">File type filter.</param>
            <param name="dlgRes">Dialog result.</param>
            <param name="obj">Object to be saved.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.SaveByDialog``1(``0,Stemmer.Cvb.Utilities.SaveFunction{``0},System.String,System.Windows.Forms.DialogResult@)">
            <summary>
            Generic file save function.
            </summary>
            <typeparam name="TObject">Type of the object to be saved.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="filter">File type filter.</param>
            <param name="dlgRes">Dialog result.</param>
            <param name="obj">Object to be saved.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.SaveByDialog``1(``0,Stemmer.Cvb.Utilities.SaveFunction{``0},System.Windows.Forms.DialogResult@)">
            <summary>
            Generic file save function.
            </summary>
            <typeparam name="TObject">Type of the object to be saved.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="dlgRes">Dialog result.</param>
            <param name="obj">Object to be saved.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.SaveByDialog``1(``0,Stemmer.Cvb.Utilities.SaveFunction{``0},System.Windows.Forms.IWin32Window,System.String,System.String)">
            <summary>
            Generic file save function.
            </summary>
            <typeparam name="TObject">Type of the object to be saved.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="owner">Window that owns the modal dialog.</param>
            <param name="title">Title of the dialog.</param>
            <param name="filter">File type filter.</param>
            <param name="obj">Object to be saved.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.SaveByDialog``1(``0,Stemmer.Cvb.Utilities.SaveFunction{``0},System.String,System.String)">
            <summary>
            Generic file save function.
            </summary>
            <typeparam name="TObject">Type of the object to be saved.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="title">Title of the dialog.</param>
            <param name="filter">File type filter.</param>
            <param name="obj">Object to be saved.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.SaveByDialog``1(``0,Stemmer.Cvb.Utilities.SaveFunction{``0},System.String)">
            <summary>
            Generic file save function.
            </summary>
            <typeparam name="TObject">Type of the object to be saved.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="filter">File type filter.</param>
            <param name="obj">Object to be saved.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.FileDialogs.SaveByDialog``1(``0,Stemmer.Cvb.Utilities.SaveFunction{``0})">
            <summary>
            Generic file save function.
            </summary>
            <typeparam name="TObject">Type of the object to be saved.</typeparam>
            <param name="f">Load delegate.</param>
            <param name="obj">Object to be saved.</param>
        </member>
        <member name="T:Stemmer.Cvb.Forms.NamespaceDoc">
            <summary>
            The namespace and assembly <c>Stemmer.Cvb.Forms</c> contain the GDI
            and DirectDraw/Direct3D based Common Vision Blox display implemented
            in the CVCDisp.dll as well as the GenApi grid implemented in 
            CVGenApiGrid.dll. It also gives access to the Common Vision Blox
            overlay plug ins from within Cvb.Net.
            </summary>  
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.NamespaceDoc">
            <summary>
            The overlay plug ins (based on the *.opi files of the Common Vision
            Blox installation) that may be used with the <see cref="T:Stemmer.Cvb.Forms.Controls.Display"/>
            control are located in the namespace 
            <c>Stemmer.Cvb.Forms.Overlays</c>.
            </summary>  
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.PluginData.NamespaceDoc">
            <summary>
            This namespace contains all the plugin data structures used 
            internally. Library users will usually not interact directly with
            these objects.
            </summary>  
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.PluginData.FontWeight">
            <summary>
            Font weight used by the TextOut Plugin
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.FontWeight.DontCare">
            <summary>
            don't mind the font weight
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.FontWeight.Thin">
            <summary>
            thin font
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.FontWeight.ExtraLight">
            <summary>
            extra light font
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.FontWeight.Light">
            <summary>
            light font
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.FontWeight.Normal">
            <summary>
            normal font
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.FontWeight.Medium">
            <summary>
            medium font
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.FontWeight.SemiBold">
            <summary>
            semi bold font
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.FontWeight.Bold">
            <summary>
            bold font
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.FontWeight.ExtraBold">
            <summary>
            extra bold font
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.FontWeight.Heavy">
            <summary>
            heavy (fattest) font
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.PluginData.PenStylePlugInData">
            <summary>
            Plugin data for pen styles. Recognized by Area, Circle, Crosshair,
            FixCircle, Line, Rectangle and RotatedCrosshair plugin.
            </summary>
            <remarks>Like all OverlayPlugin data structures in the namespace 
            Stemmer.Cvb.Overlays.PluginData this structure is only intended for 
            internal use (even though it has been marked public for the sake of a 
            more straightforward implementation) and should not be accessed in an
            actual application.</remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PluginData.PenStylePlugInData.#ctor(System.Drawing.Drawing2D.DashStyle,System.Int32)">
            <summary>
            construct a TPenStylePlugInData structure
            </summary>
            <param name="style">pen style</param>
            <param name="width">pen width</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.PenStylePlugInData.PenStyle">
            <summary>
            Pen style (see enumeration)
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.PenStylePlugInData.PenWidth">
            <summary>
            Pen width in pixels
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.PluginData.ArcPlugInData">
            <summary>
            Plugin Data structure for the Arc plugin
            </summary>
            <remarks>Like all OverlayPlugin data structures in the namespace 
            Stemmer.Cvb.Overlays.PluginData this structure is only intended for 
            internal use (even though it has been marked public for the sake of a 
            more straightforward implementation) and should not be accessed in an
            actual application.</remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PluginData.ArcPlugInData.#ctor(System.Double,System.Double,System.Double,System.Int32,System.Boolean,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Constructor for ArcPlugInData
            </summary>
            <param name="radius"></param>
            <param name="startAngle"></param>
            <param name="stopAngle"></param>
            <param name="penWidth"></param>
            <param name="showHandles"></param>
            <param name="dashStyle"></param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.ArcPlugInData.Reserved">
            <summary>
            Only there for compatibility with VB6 and Delphi.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.ArcPlugInData.Radius">
            <summary>
            Radius of the Arc. If the radius is set to 0.0 then the angles
            will be calculated by the initial positions of the three vertices!
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.ArcPlugInData.StartAngle">
            <summary>
            Start angle of the arc
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.ArcPlugInData.StopAngle">
            <summary>
            End angle of the arc
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.ArcPlugInData.PenWidth">
            <summary>
            Pen width with which to paint the arc
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.ArcPlugInData.ShowHandles">
            <summary>
            Set to true to indicate the drag points by a small box
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.ArcPlugInData.DashStyle">
            <summary>
            Dash Style
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.PluginData.BitmapPlugInData">
            <summary>
            Plugin Data structure for the Bitmap and the FixBitmap plugins.
            </summary>
            <remarks>Like all OverlayPlugin data structures in the namespace 
            Stemmer.Cvb.Overlays.PluginData this structure is only intended for 
            internal use (even though it has been marked public for the sake of a 
            more straightforward implementation) and should not be accessed in an
            actual application.</remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PluginData.BitmapPlugInData.#ctor(System.Drawing.Bitmap)">
            <summary>
            Create a <code>BitmapPluginData</code> structure from a 
            <see cref="T:System.Drawing.Bitmap"/>. Note that due to restriction in
            the inter operation between unmanaged code and the CLR, transparency
            can <i>not</i> be used when create a Bitmap plugin from a CLR bitmap.
            </summary>
            <param name="bitmap">Bitmap to show</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.BitmapPlugInData.Unused">
            <summary>
            Dummy element - not used.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.BitmapPlugInData.Filename">
            <summary>
            Filename for bitmap.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.BitmapPlugInData.TransparentColor">
            <summary>
            Transparent color (works only on loaded bmp files, not from 
            bitmaps imported from System.Drawing.Bitmap!)
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.BitmapPlugInData.Bitmap">
            <summary>
            Bitmap handle.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.PluginData.CompassPlugInData">
            <summary>
            Plugin Data structure for the Compass plugin.
            </summary>
            <remarks>Like all OverlayPlugin data structures in the namespace 
            Stemmer.Cvb.Overlays.PluginData this structure is only intended for 
            internal use (even though it has been marked public for the sake of a 
            more straightforward implementation) and should not be accessed in an
            actual application.</remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PluginData.CompassPlugInData.#ctor(System.Int32,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates an instance of this plugin data structure.
            </summary>
            <param name="length">Initial length</param>
            <param name="alpha">Initial angle</param>
            <param name="baseRadius">Inner circle radius</param>
            <param name="baseCircleRadius">Outer circle radius</param>
            <param name="penWidth">width of the pen for the outer circle</param>
            <param name="fontSize">Size of the font to be used</param>
            <param name="transparentText"><code>True</code> text is transparent; 
            <code>False</code> text is opaque.</param>
            <param name="text">Header text</param>
            <param name="fixToInitialLength"><code>True</code> compass can't be 
            resized</param>
            <param name="snapBack"><code>True</code> after dragging comapss resize 
            itself to initial size</param>
            <param name="showAngle"><code>True</code> angle will be displayed as 
            text</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.CompassPlugInData.Length">
            <summary>
            Initial length
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.CompassPlugInData.Alpha">
            <summary>
            Initial angle (in radians)
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.CompassPlugInData.BaseRadius">
            <summary>
            Inner radius
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.CompassPlugInData.CircleRadius">
            <summary>
            Outer radius
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.CompassPlugInData.PenWidth">
            <summary>
            Penn width
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.CompassPlugInData.FontSize">
            <summary>
            Font height
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.CompassPlugInData.TransparentText">
            <summary>
            Transparency flag
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.CompassPlugInData.Text">
            <summary>
            Text to display
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.CompassPlugInData.StringType">
            <summary>
            Set to zero when passing an ANSI string, to 1 when passing Unicode
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.CompassPlugInData.FixedLength">
            <summary>
            If set to TRUE the Compass can't be resized 
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.CompassPlugInData.SnapBack">
            <summary>
            If set to TRUE Compass will resize to initial size when dragged
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.CompassPlugInData.ShowAngle">
            <summary>
            If set to TRUE the angle will be displayed as a string
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.PluginData.ImagePlugInData">
            <summary>
            Plugin Data structure for the image-in-image plugin.
            </summary>
            <remarks>Like all OverlayPlugin data structures in the namespace 
            Stemmer.Cvb.Overlays.PluginData this structure is only intended for 
            internal use (even though it has been marked public for the sake of a 
            more straightforward implementation) and should not be accessed in an
            actual application.</remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PluginData.ImagePlugInData.#ctor(Stemmer.Cvb.Rect,System.IntPtr)">
            <summary>
            Plugin Data structure for the image-in-image plugin.
            </summary>
            <param name="aoi">subsection of the input image to be used for 
            Picture in Picture display.</param>
            <param name="imageHandle">Handle of the image to be used for Picture 
            in Picture display.</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.ImagePlugInData.Left">
            <summary>
            Left edge of the subsection of the input image to be used for 
            PictureInPicture display
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.ImagePlugInData.Top">
            <summary>
            Left edge of the subsection of the input image to be used for 
            PictureInPicture display
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.ImagePlugInData.Right">
            <summary>
            Left edge of the subsection of the input image to be used for 
            PictureInPicture display
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.ImagePlugInData.Bottom">
            <summary>
            Left edge of the subsection of the input image to be used for 
            PictureInPicture display
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.ImagePlugInData.ImageHandle">
            <summary>
            Image to be used for PictureInPicture display
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.ImagePlugInData.Reserved1">
            <summary>
            Reserved parameter. Set to zero.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.ImagePlugInData.Reserved2">
            <summary>
            Reserved parameter. Set to zero.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.PluginData.TargetPlugInData">
            <summary>
            Plugin Data structure for the Target plugin.
            </summary>
            <remarks>Like all OverlayPlugin data structures in the namespace 
            Stemmer.Cvb.Overlays.PluginData this structure is only intended for 
            internal use (even though it has been marked public for the sake of a 
            more straightforward implementation) and should not be accessed in an
            actual application.</remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PluginData.TargetPlugInData.#ctor(System.Drawing.Drawing2D.DashStyle,System.Int32,System.Int32,Stemmer.Cvb.Forms.Overlays.TargetStyle,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor for TargetPlugInData structures.
            </summary>
            <param name="dashStyle">pen style to be used</param>
            <param name="penWidth">pen width to be used</param>
            <param name="numTargets">number of targets to paint</param>
            <param name="targetType">type of target to paint</param>
            <param name="targetRadius">radius of targets to paint</param>
            <param name="crossHairWidth">width of the crosshairs</param>
            <param name="roundRadius">radius of the rounded corners if the target type is ROUNDEDRECTANGLE</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TargetPlugInData.DashStyle">
            <summary>
            Type of pen to use for painting
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TargetPlugInData.PenWidth">
            <summary>
            Width of pen to use for painting
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TargetPlugInData.NumTargets">
            <summary>
            number of targets to paint
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TargetPlugInData.TargetType">
            <summary>
            type of target to paint
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TargetPlugInData.TargetRadius">
            <summary>
            target radius
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TargetPlugInData.CrossHairSize">
            <summary>
            crosshair width
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TargetPlugInData.RoundRadius">
            <summary>
            Only applies when TargetType = RoundedRectangle, in which case this parameter specifies
            the radius of the rounded corners
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.PluginData.RotatedRectPlugInData">
            <summary>
            Plugin Data structure for the RotatedRect plugin.
            </summary>
            <remarks>Like all OverlayPlugin data structures in the namespace 
            Stemmer.Cvb.Overlays.PluginData this structure is only intended for 
            internal use (even though it has been marked public for the sake of a 
            more straightforward implementation) and should not be accessed in an
            actual application.</remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PluginData.RotatedRectPlugInData.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            Creates an instance of this structure.
            </summary>
            <param name="width">Width of rectangle</param>
            <param name="height">Height of rectangle</param>
            <param name="rotation">Rotation of rectangle</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.RotatedRectPlugInData.Width">
            <summary>
            Width of rectangle.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.RotatedRectPlugInData.Height">
            <summary>
            Height of rectangle.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.RotatedRectPlugInData.Rotation">
            <summary>
            Rotation of rectangle.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.PluginData.TextOutPlugInData">
            <summary>
            Plugin Data structure for the TextOut plugin.
            </summary>
            <remarks>Like all OverlayPlugin data structures in the namespace 
            Stemmer.Cvb.Overlays.PluginData this structure is only intended for 
            internal use (even though it has been marked public for the sake of a 
            more straightforward implementation) and should not be accessed in an
            actual application.</remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PluginData.TextOutPlugInData.#ctor(System.String,System.Drawing.Font,System.Double,System.Boolean)">
            <summary>
            Constructor for TextOutPlugInData structures.
            </summary>
            <param name="text">text to be written</param>
            <param name="font">font to be used</param>
            <param name="rotation">rotation in degrees</param>
            <param name="showFocus">true = display marker, false = display text 
            only</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TextOutPlugInData.FontSize">
            <summary>
            Size of the font to be used
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TextOutPlugInData.Weight">
            <summary>
            Font weight
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TextOutPlugInData.Rotation">
            <summary>
            Rotation (degrees) of the output text
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TextOutPlugInData.Italic">
            <summary>
            use italics font
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TextOutPlugInData.Underline">
            <summary>
            underline font
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TextOutPlugInData.FontName">
            <summary>
            name of the font to be used (e.g. "Arial")
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TextOutPlugInData.Text">
            <summary>
            Text to show
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TextOutPlugInData.StringType">
            <summary>
            type of the string to be used (BSTR or LPSTR). This is just around for
            compatibility with VB6. Leave it at LPSTR.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.TextOutPlugInData.Flags">
            <summary>
            Flags: 0 = no marker is displayed, 1 = marker is displayed
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.PluginData.PolyLinePlugInData">
            <summary>
            Plugin Data structure for the PolyLine plugin.
            </summary>
            <remarks>Like all OverlayPlugin data structures in the namespace 
            Stemmer.Cvb.Overlays.PluginData this structure is only intended for 
            internal use (even though it has been marked public for the sake of a 
            more straightforward implementation) and should not be accessed in an
            actual application.</remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PluginData.PolyLinePlugInData.#ctor(System.Drawing.Drawing2D.DashStyle,System.Int32,System.Int32)">
            <summary>
            Creates an instance of this structure.
            </summary>
            <param name="dashStyle">Pen style</param>
            <param name="penWidth">Pen width</param>
            <param name="numVertices">Number of vertices</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.PolyLinePlugInData.PenStyle">
            <summary>
            Pen style.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.PolyLinePlugInData.PenWidth">
            <summary>
            Pen width
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.PolyLinePlugInData.NumVertices">
            <summary>
            Number of vertices
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.PluginData.PixelListPlugInData">
            <summary>
            Plugin Data structure for the PixelList plugin.
            </summary>
            <remarks>Like all OverlayPlugin data structures in the namespace 
            Stemmer.Cvb.Overlays.PluginData this structure is only intended for 
            internal use (even though it has been marked public for the sake of a 
            more straightforward implementation) and should not be accessed in an
            actual application.</remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PluginData.PixelListPlugInData.#ctor(System.IntPtr,System.Drawing.Drawing2D.DashStyle,System.Int32)">
            <summary>
            Creates an instance of this structure.
            </summary>
            <param name="pixelList">Vertices for this overlay</param>
            <param name="dashStyle">Pen style</param>
            <param name="penWidth">Pen width</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.PixelListPlugInData.PixelList">
            <summary>
            Vertices for this overlay
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.PixelListPlugInData.PenStyle">
            <summary>
            Pen style
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PluginData.PixelListPlugInData.PenWidth">
            <summary>
            Pen width
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.ArcOverlay">
            <summary>
            An arc
            zoom factor
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.ArcOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Boolean,System.Object)">
            <summary>
            Constructor for an arc segment overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">dragable or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="center">arc's center</param>
            <param name="p0">start point of the arc</param>
            <param name="p1">stop point of the arc</param>
            <param name="penWidth">pen width with which to paint the arc</param>
            <param name="dashStyle">dash style with which to paint the arc</param>
            <param name="showHandles">display drag handles?</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.ArcOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Boolean)">
            <summary>
            Constructor for an arc segment overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">dragable or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="center">arc's center</param>
            <param name="p0">start point of the arc</param>
            <param name="p1">stop point of the arc</param>
            <param name="penWidth">pen width with which to paint the arc</param>
            <param name="dashStyle">dash style with which to paint the arc</param>
            <param name="showHandles">display drag handles?</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.ArcOverlay.Clone">
            <summary>
            Virtual copy constructor.
            </summary>
            <returns>Cloned overlay.</returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ArcOverlay.ShowHandles">
            <summary>
            gets or sets whether the drag handles of the two vertices indicating
            the start and the stop of the arc are to be displayed
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ArcOverlay.PenWidth">
            <summary>
            Width of the pen to be used for painting.
            </summary>
            <exception cref="T:System.ArgumentException">If the pen width is 0 or less
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ArcOverlay.DashStyle">
            <summary>
            Dash style to be used for painting.
            </summary>
            <remarks>Dash style "Custom" is not supported.</remarks>
            <remarks>Dash style setting will only have an effect if the pen width
            has been set to 1. If pen width is greater than 1, a solid brush will
            always be used. This is a limitation coming from the GDI function
            CreatePen that is being used internally by the overlay plugin.
            </remarks>
            <exception cref="T:System.ArgumentException">If the dash style is "Custom"
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ArcOverlay.Radius">
            <summary>
            Current radius of the arc.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ArcOverlay.StartAngle">
            <summary>
            Angle between first point (P0) and center point (in radians).
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ArcOverlay.StopAngle">
            <summary>
            Angle between second point (P1) and center point (in radians).
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ArcOverlay.Center">
            <summary>
            Location of the center point of the Arc.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ArcOverlay.P0">
            <summary>
            Location of the start point of the Arc.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ArcOverlay.P1">
            <summary>
            Location of the end point of the Arc.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ArcOverlay.Filled">
            <summary>
            Filled property is always false.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.ArcOverlay.CreatePluginData">
            <summary>
            Create the plugin data structure for later use
            </summary>
            <returns>Plugin data.</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.Area2DOverlay">
            <summary>
            An overlay object representing an Area2D object on a Display.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.Area2DOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,Stemmer.Cvb.Area2D,System.Object)">
            <summary>
            Constructor for an Area2D overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">drag able or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="area2D">Area2D's extent</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.Area2DOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,Stemmer.Cvb.Area2D)">
            <summary>
            Constructor for an Area2D overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">drag able or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="area2D">Area2D's extent</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.Area2DOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,Stemmer.Cvb.Area2D,System.Drawing.Drawing2D.DashStyle,System.Int32,System.Object)">
            <summary>
            Constructor for an Area2D overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">drag able or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="area2D">Area2D's extent</param>
            <param name="dashStyle">dash style for painting</param>
            <param name="penWidth">pen width for painting</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.Area2DOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,Stemmer.Cvb.Area2D,System.Drawing.Drawing2D.DashStyle,System.Int32)">
            <summary>
            Constructor for an Area2D overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">drag able or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="area2D">Area2D's extent</param>
            <param name="dashStyle">dash style for painting</param>
            <param name="penWidth">pen width for painting</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.Area2DOverlay.Clone">
            <summary>
            Virtual copy Constructor.
            </summary>
            <returns>Cloned overlay.</returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.Area2DOverlay.Area2D">
            <summary>
            The two axises of the ellipse in x and y direction
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.Area2DOverlay.Filled">
            <summary>
            filled property is always false
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.BitmapOverlay">
            <summary>
            A "target" - in principle a stack of crosshair plugins
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.BitmapOverlay.#ctor(System.String,System.Boolean,System.Drawing.Point,System.Drawing.Size,System.Drawing.Bitmap,System.Object)">
            <summary>
            Constructor for bitmap overlays.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="location">paint position</param>
            <param name="size">size to which to stretch the bitmap</param>
            <param name="bitmap">bitmap to be used as overlay (will be cloned)</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.BitmapOverlay.#ctor(System.String,System.Boolean,System.Drawing.Point,System.Drawing.Size,System.Drawing.Bitmap)">
            <summary>
            Constructor for bitmap overlays.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="location">paint position</param>
            <param name="size">size to which to stretch the bitmap</param>
            <param name="bitmap">bitmap to be used as overlay (will be cloned)
            </param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.BitmapOverlay.Clone">
            <summary>
            Virtual copy constructor.
            </summary>
            <returns>The cloned overlay object.</returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.BitmapOverlay.Color">
            <summary>
            Setting any other color than black is not possible for this overlay.
            </summary>
            <exception cref="T:System.NotSupportedException">when trying to set a value
            (inheritance dictates that a set accessor needs to be present).
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.BitmapOverlay.Filled">
            <summary>
            Filled property is always true on this overlay.
            </summary>
            <exception cref="T:System.NotSupportedException">when trying to set a value
            of "false".
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.BitmapOverlay.XORPainting">
            <summary>
            XOR painting is not possible...
            </summary>
            <exception cref="T:System.NotSupportedException">when trying to set true
            (inheritance dictates that a set accessor needs to be present).
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.BitmapOverlay.Bitmap">
            <summary>
            Bitmap to be overlaid.
            </summary>
            <exception cref="T:System.NullReferenceException">when trying to set a null
            handle</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.BitmapOverlay.Location">
            <summary>
            Position of the left top corner of the bitmap.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.BitmapOverlay.Size">
            <summary>
            Size to which to stretch the bitmap.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.BitmapOverlay.CreatePluginData">
            <summary>
            Create the plugin data structure for later use.
            </summary>
            <returns>A newly created plugin data structure.</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.CircleOverlay">
            <summary>
            An circle overlay.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CircleOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,System.Drawing.Point,System.Double,System.Object)">
            <summary>
            Constructor for a circle overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">drag able or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="center">circle's center</param>
            <param name="radius">circle's radius</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CircleOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,System.Drawing.Point,System.Double)">
            <summary>
            Constructor for a circle overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">drag able or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="center">circle's center</param>
            <param name="radius">circle's radius</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CircleOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,System.Drawing.Point,System.Double,System.Drawing.Drawing2D.DashStyle,System.Int32,System.Object)">
            <summary>
            Constructor for a circle overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">drag able or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="center">circle's center</param>
            <param name="radius">circle's radius</param>
            <param name="dashStyle">dash style for painting the line</param>
            <param name="penWidth">pen width for painting the line</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CircleOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,System.Drawing.Point,System.Double,System.Drawing.Drawing2D.DashStyle,System.Int32)">
            <summary>
            Constructor for a circle overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">drag able or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="center">circle's center</param>
            <param name="radius">circle's radius</param>
            <param name="dashStyle">dash style for painting the line</param>
            <param name="penWidth">pen width for painting the line</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CircleOverlay.Clone">
            <summary>
            virtual copy ctor
            </summary>
            <returns>The clonsed <see cref="T:Stemmer.Cvb.Forms.Overlays.CircleOverlay"/> object.</returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CircleOverlay.Radius">
            <summary>
            The radius of the circle.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CircleOverlay.Center">
            <summary>
            Center of the circle.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CircleOverlay.Perimeter">
            <summary>
            Point on the circle's perimeter defining the circle's radius.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.NeedleMode">
            <summary>
            The different behaviors of the compass needle.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.NeedleMode.Free">
            <summary>
            Needle may be resized freely by dragging it
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.NeedleMode.SnapBack">
            <summary>
            Needle may be dragged freely, but when released snaps back to its
            original length
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.NeedleMode.Fixed">
            <summary>
            Needle always keeps its length
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.CompassOverlay">
            <summary>
            Compass plugin, indicating text and optionally an angle.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CompassOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Int32,Stemmer.Cvb.Angle,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,Stemmer.Cvb.Forms.Overlays.NeedleMode,System.Boolean,System.Object)">
            <summary>
            Standard Constructor for Compass overlays.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">dragable or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="location">location of the compass</param>
            <param name="length">length of the compass needle</param>
            <param name="angle">orientation of the compass needle</param>
            <param name="baseRadius">Radius of the circle at the compass base.
            </param>
            <param name="circleRadius">Radius of the outer circle around the 
            compass base.</param>
            <param name="penWidth">pen width with which to paint the compass 
            circle</param>
            <param name="fontSize">size of the compass label text</param>
            <param name="opaqueLabel">opacity of the compass label</param>
            <param name="mode">needle mode</param>
            <param name="showAngle">set to true to display the angle</param>
            <param name="tag">object to be associated witht his overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CompassOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Int32,Stemmer.Cvb.Angle,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,Stemmer.Cvb.Forms.Overlays.NeedleMode,System.Boolean)">
            <summary>
            Standard Constructor for Compass overlays.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">dragable or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="location">location of the compass</param>
            <param name="length">length of the compass needle</param>
            <param name="angle">orientation of the compass needle</param>
            <param name="baseRadius">Radius of the circle at the compass base.
            </param>
            <param name="circleRadius">Radius of the outer circle around the 
            compass base.</param>
            <param name="penWidth">pen width with which to paint the compass 
            circle</param>
            <param name="fontSize">size of the compass label text</param>
            <param name="opaqueLabel">opacity of the compass label</param>
            <param name="mode">needle mode</param>
            <param name="showAngle">set to true to display the angle</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CompassOverlay.Clone">
            <summary>
            Virtual copy Constructor.
            </summary>
            <returns>Cloned <see cref="T:Stemmer.Cvb.Forms.Overlays.CompassOverlay"/> object.</returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CompassOverlay.ShowAngle">
            <summary>
            Indicates whether or not the overlay should display the current angle.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CompassOverlay.NeedleMode">
            <summary>
            Gets or sets the compass needle behavior.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CompassOverlay.OpaqueLabel">
            <summary>
            true: a white rectangle will be painted under the label text in order 
            to improve visibility of the text label; false: the text background
            will be transparent.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CompassOverlay.FontSize">
            <summary>
            Font size for the compass label.
            </summary>
            <exception cref="T:System.ArgumentException">when trying to set a font size 
            smaller than 1</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CompassOverlay.PenWidth">
            <summary>
            Width of the pen to be used for painting.
            </summary>
            <exception cref="T:System.ArgumentException">If the pen width is 0 or less
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CompassOverlay.CircleRadius">
            <summary>
            Radius of the additional circle around the base.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CompassOverlay.BaseRadius">
            <summary>
            Radius of the compass needle's base.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CompassOverlay.Angle">
            <summary>
            Direction of the compass needle (in radians).
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CompassOverlay.Filled">
            <summary>
            Filled property is always true.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CompassOverlay.Text">
            <summary>
            Text to be displayed on the compass label.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CompassOverlay.Length">
            <summary>
            Length of the compass needle.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CompassOverlay.Location">
            <summary>
            Location of the Compass.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CompassOverlay.CreatePluginData">
            <summary>
            Create the plugin data structure for later use.
            </summary>
            <returns>The internally used plugin data structure.</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.CrossHairOverlay">
            <summary>
            A simple Crosshair overlay.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CrossHairOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Drawing.Size,System.Object)">
            <summary>
            Constructor for cross hair plugins
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">dragable</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="location">position</param>
            <param name="size">size of the horizontal and vertical bar</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CrossHairOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Constructor for cross hair plugins
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">dragable</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="location">position</param>
            <param name="size">size of the horizontal and vertical bar</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CrossHairOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Drawing.Size,System.Drawing.Drawing2D.DashStyle,System.Int32,System.Object)">
            <summary>
            Constructor for cross hair plugins
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">dragable</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="location">position</param>
            <param name="size">size of the horizontal and vertical bar</param>
            <param name="dashStyle">dash style for painting</param>
            <param name="penWidth">pen width for painting</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CrossHairOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Drawing.Size,System.Drawing.Drawing2D.DashStyle,System.Int32)">
            <summary>
            Constructor for cross hair plugins
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">dragable</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="location">position</param>
            <param name="size">size of the horizontal and vertical bar</param>
            <param name="dashStyle">dash style for painting</param>
            <param name="penWidth">pen width for painting</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CrossHairOverlay.Clone">
            <summary>
            Virtual copy constructor.
            </summary>
            <returns>Cloned <see cref="T:Stemmer.Cvb.Forms.Overlays.CrossHairOverlay"/> object.</returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CrossHairOverlay.Filled">
            <summary>
            Filled painting is not supported on this overlay.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CrossHairOverlay.Size">
            <summary>
            The sizes of the two bars for the cross hair.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.CrossHairOverlay.Location">
            <summary>
            Position of the cross hair.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.ImageOverlay">
            <summary>
            A picture in picture display of a CVB image by means of an overlay.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.ImageOverlay.#ctor(System.String,System.Boolean,System.Drawing.Point,System.Drawing.Size,Stemmer.Cvb.Image,System.Object)">
            <summary>
            Standard constructor for Image Overlays.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="location">paint position</param>
            <param name="size">size to which to stretch the image</param>
            <param name="image"><see cref="T:Stemmer.Cvb.Image"/> to be used as 
            overlay</param>
            <param name="tag">object to be associated with this overlay</param>
            <remarks>Using a <see cref="T:Stemmer.Cvb.Image"/> as an overlay will of 
            course increment the reference count for that image, making it live at 
            least as long as the overlay object.</remarks>
            <exception cref="T:System.ArgumentNullException">if the input image is null
            </exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.ImageOverlay.#ctor(System.String,System.Boolean,System.Drawing.Point,System.Drawing.Size,Stemmer.Cvb.Image)">
            <summary>
            Standard constructor for <see cref="T:Stemmer.Cvb.Image"/> Overlays.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="location">paint position</param>
            <param name="size">size to which to stretch the image</param>
            <param name="image"><see cref="T:Stemmer.Cvb.Image"/> to be used as 
            overlay</param>
            <remarks>Using a <see cref="T:Stemmer.Cvb.Image"/> as an overlay will of 
            course increment the reference count for that image, making it live at 
            least as long as the overlay object.</remarks>
            <exception cref="T:System.ArgumentNullException">if the input image is null
            </exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.ImageOverlay.Clone">
            <summary>
            Virtual copy Constructor.
            </summary>
            <returns>The cloned <see cref="T:Stemmer.Cvb.Forms.Overlays.ImageOverlay"/> object.</returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ImageOverlay.Color">
            <summary>
            Setting any other color than black is not possible for this overlay.
            </summary>
            <exception cref="T:System.NotSupportedException">when trying to set a value
            (inheritance dictates that a set accessor needs to be present).
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ImageOverlay.Filled">
            <summary>
            Filled property is always true on this overlay.
            </summary>
            <exception cref="T:System.NotSupportedException">when trying to set a value
            of "false".
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ImageOverlay.XORPainting">
            <summary>
            XOR painting is not possible...
            </summary>
            <exception cref="T:System.NotSupportedException">when trying to set true
            (inheritance dictates that a set accessor needs to be present).
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ImageOverlay.Image">
            <summary>
            Image to be displayed in picture-in-picture style.
            </summary>
            <exception cref="T:System.ArgumentNullException">when trying to set a null 
            handle</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ImageOverlay.Location">
            <summary>
            position of the left top corner of the bitmap
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.ImageOverlay.Size">
            <summary>
            Size to which to stretch the image.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.ImageOverlay.CreatePluginData">
            <summary>
            Create the plugin data structure for later use
            </summary>
            <returns>The overlay plugin data structure.</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.DisplayLabel">
            <summary>
            Display Label.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayLabel.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Drawing.Point)">
            <summary>
            Construct a display label.
            </summary>
            <param name="text">label text</param>
            <param name="canDrag">If true, the label becomes dragable, if false it
            will remain fixed</param>
            <param name="color">label color</param>
            <param name="pos">label position in pixel coordinates</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayLabel.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Drawing.Point,System.Object)">
            <summary>
            Construct a display label.
            </summary>
            <param name="text">label text</param>
            <param name="canDrag">If true, the label becomes dragable, if false it
            will remain fixed</param>
            <param name="color">label color</param>
            <param name="pos">label position in pixel coordinates</param>
            <param name="tag">object with which this label is to be associated
            </param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayLabel.#ctor(Stemmer.Cvb.Forms.Overlays.DisplayLabel)">
            <summary>
            Copy constructor.
            </summary>
            <param name="obj"><see cref="T:Stemmer.Cvb.Forms.Overlays.DisplayLabel"/> object to copy.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayLabel.Overlay_ConnectedToDisplay">
            <summary>
            Add a label to a display.
            </summary>
            <exception cref="T:System.ObjectDisposedException">If the display we are 
            trying to work on has already been disposed</exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayLabel.Overlay_DisconnectedFromDisplay(System.Boolean)">
            <summary>
            Remove a label from its display
            </summary>
            <param name="handBackID"><c>true</c> if the overlay ID should be 
            handed back to the display, <c>false</c> otherwise.</param>
            <exception cref="T:System.ObjectDisposedException">If the display we are 
            trying to work on has already been disposed</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.DisplayLabel.Location">
            <summary>
            Pixel position of the label (in pixels of the image that is currently
            being displayed).
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.FixedSizeBitmapOverlay">
            <summary>
            A "target" - in principle a stack of crosshair plugins
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.FixedSizeBitmapOverlay.#ctor(System.String,System.Boolean,System.Drawing.Point,System.Drawing.Bitmap,System.Object)">
            <summary>
            Standard constructor for bitmap overlays that will not change in size
            regardless of the current zoom level.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="location">paint position</param>
            <param name="bitmap">bitmap to be used as overlay (will be cloned)</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.FixedSizeBitmapOverlay.#ctor(System.String,System.Boolean,System.Drawing.Point,System.Drawing.Bitmap)">
            <summary>
            Standard constructor for bitmap overlays that will not change in size
            regardless of the current zoom level.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="location">paint position</param>
            <param name="bitmap">bitmap to be used as overlay (will be cloned)</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.FixedSizeBitmapOverlay.Clone">
            <summary>
            Virtual copy Constructor.
            </summary>
            <returns>The cloned <see cref="T:Stemmer.Cvb.Forms.Overlays.FixedSizeBitmapOverlay"/> object.
            </returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.FixedSizeBitmapOverlay.Color">
            <summary>
            Setting any other color than black is not possible for this overlay.
            </summary>
            <exception cref="T:System.NotSupportedException">when trying to set a value
            (inheritance dictates that a set accessor needs to be present).
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.FixedSizeBitmapOverlay.Filled">
            <summary>
            Filled property is always true on this overlay.
            </summary>
            <exception cref="T:System.NotSupportedException">when trying to set a value
            of "false".
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.FixedSizeBitmapOverlay.XORPainting">
            <summary>
            XOR painting is not possible...
            </summary>
            <exception cref="T:System.NotSupportedException">when trying to set true
            (inheritance dictates that a set accessor needs to be present).
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.FixedSizeBitmapOverlay.Bitmap">
            <summary>
            Bitmap to be displayed
            </summary>
            <exception cref="T:System.NullReferenceException">when trying to set a null
            handle</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.FixedSizeBitmapOverlay.Location">
            <summary>
            position of the left top corner of the bitmap
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.FixedSizeBitmapOverlay.CreatePluginData">
            <summary>
            Create the plugin data structure for later use
            </summary>
            <returns>The overlay plugin's data structure.</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.FixedSizeEllipseOverlay">
            <summary>
            An ellipse overlay that does not change size regardless of the display's 
            zoom factor
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.FixedSizeEllipseOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,System.Drawing.Point,System.Drawing.Size,System.Object)">
            <summary>
            Constructor for a fixed size ellipse overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">dragable or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="center">ellipse's center</param>
            <param name="axis">size of the two axises of the ellipses</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.FixedSizeEllipseOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Constructor for a fixed size ellipse overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">dragable or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="center">ellipse's center</param>
            <param name="axis">size of the two axises of the ellipses</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.FixedSizeEllipseOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,System.Drawing.Point,System.Drawing.Size,System.Drawing.Drawing2D.DashStyle,System.Int32,System.Object)">
            <summary>
            Constructor for a fixed size ellipse overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">dragable or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="center">ellipse's center</param>
            <param name="axis">axises of the ellipse</param>
            <param name="dashStyle">dash style to be used for painting</param>
            <param name="penWidth">pen width to be used for painting</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.FixedSizeEllipseOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,System.Drawing.Point,System.Drawing.Size,System.Drawing.Drawing2D.DashStyle,System.Int32)">
            <summary>
            Constructor for a fixed size ellipse overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">dragable or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="center">ellipse's center</param>
            <param name="axis">axises of the ellipse</param>
            <param name="dashStyle">dash style to be used for painting</param>
            <param name="penWidth">pen width to be used for painting</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.FixedSizeEllipseOverlay.Clone">
            <summary>
            Virtual copy constructor.
            </summary>
            <returns>The clones <see cref="T:Stemmer.Cvb.Forms.Overlays.FixedSizeEllipseOverlay"/> object.
            </returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.FixedSizeEllipseOverlay.Axis">
            <summary>
            The two axises of the ellipse in x and y direction
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.FixedSizeEllipseOverlay.Center">
            <summary>
            Position of the center of the ellipse.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.LineOverlay">
            <summary>
            A simple line overlay.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.LineOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Drawing.Point,System.Object)">
            <summary>
            Constructor for Line plugins.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">dragable</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="start">start point of the line</param>
            <param name="end">end point of the line</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.LineOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Constructor for Line plugins.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">dragable</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="start">start point of the line</param>
            <param name="end">end point of the line</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.LineOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Drawing.Point,System.Drawing.Drawing2D.DashStyle,System.Int32,System.Object)">
            <summary>
            Constructor for Line plugins.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">dragable</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="start">start point of the line</param>
            <param name="end">end point of the line</param>
            <param name="dashStyle">dash style for painting the line</param>
            <param name="penWidth">pen width for painting the line</param>
            <param name="tag">object to be associated with this overlay</param>
            <exception cref="T:System.ArgumentException">If <paramref name="penWidth"/> is
            less than 0 or <paramref name="dashStyle"/> is Custom</exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.LineOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Drawing.Point,System.Drawing.Drawing2D.DashStyle,System.Int32)">
            <summary>
            Constructor for Line plugins.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">dragable</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="start">start point of the line</param>
            <param name="end">end point of the line</param>
            <param name="dashStyle">dash style for painting the line</param>
            <param name="penWidth">pen width for painting the line</param>
            <exception cref="T:System.ArgumentException">If <paramref name="penWidth"/> is
            less than 0 or <paramref name="dashStyle"/> is Custom</exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.LineOverlay.Clone">
            <summary>
            Copy Constructor.
            </summary>
            <returns>The cloned <see cref="T:Stemmer.Cvb.Forms.Overlays.LineOverlay"/> object.</returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.LineOverlay.Filled">
            <summary>
            Filled painting is not supported on this overlay plugin.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.LineOverlay.Start">
            <summary>
            The start point of the line.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.LineOverlay.End">
            <summary>
            The end point of the line.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.OverlayBase">
            <summary>
            Base object for all displayable objects (currently labels and overlay
            plug in objects)
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.OverlayBase.ObjectDisconnectHandler">
            <summary>
            Delegate for the disconnection multi cast event handler.
            </summary>
            <param name="obj">object that has been disconnected</param>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Overlays.OverlayBase.ObjectDisconnect">
            <summary>
            Event that notifies the Display Object collection that one of its 
            members was disconnected from the collection's parent display. Only
            to be used internally.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayBase.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Object)">
            <summary>
            ctor for DisplayObjects
            </summary>
            <param name="text">label/status line text for the object</param>
            <param name="canDrag">dragable flag</param>
            <param name="color">object color</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayBase.DestroyAndCreatePropertyChanged">
            <summary>
            Method to be called whenever a property value changed that 
            necessitates a destroy + create in order to reflect the property 
            change on the actual display.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayBase.OnDisconnectFromDisplay">
            <summary>
            Disconnect the object from its parent display.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayBase.OnConnectToDisplay(Stemmer.Cvb.Forms.Controls.Display)">
            <summary>
            Establish connection with a new display.
            </summary>
            <param name="disp">display to connect to</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="disp"/> is
            null</exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayBase.Overlay_DisconnectedFromDisplay(System.Boolean)">
            <summary>
            The actual disconnection needs to be coded inside this function!
            </summary>
            <param name="handBackID"><c>true</c> if the overlay's display ID 
            should be handed back to the display, <c>false</c> otherwise.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayBase.Overlay_ConnectedToDisplay">
            <summary>
            The actual display connection needs to be established inside this
            function!
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayBase.Parent">
            <summary>
            The display on which the label lives (if any...). Note that a label
            may only be associated with one display at a time
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayBase.Tag">
            <summary>
            Field for user-definable data to be associated with the overlay 
            object.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayBase.InvokeRequired">
            <summary>
            tell whether actions on the display object require an invoke action
            or not (being user interface objects, display objects should not be
            modified asynchronously)
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayBase.Text">
            <summary>
            Text being displayed on the label and/or in the status line
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayBase.DisplayID">
            <summary>
            The ID under which the unmanaged display "knows" the label
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayBase.Color">
            <summary>
            Color of the label
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.OverlayBase.color_">
            <summary>
            Internally stored color.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayBase.IsDragable">
            <summary>
            Label dragable?
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1">
            <summary>
            A Collection class for displayable object collections
            </summary>
            <typeparam name="TObj"></typeparam>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.#ctor(Stemmer.Cvb.Forms.Controls.Display)">
            <summary>
            ctor of the display object collection
            </summary>
            <param name="parent"></param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.objList_">
            <summary>
            The internally handled list of objects
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.ClearAll_Impl">
            <summary>
            Inheritors must implement this method to take the right actions to
            remove all objects of their kind from the display
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.GetByID(System.Int32)">
            <summary>
            Retrieve one of the collection's items by its ID. This provides an
            easy mapping from the display ID to the object representing the 
            display object.
            </summary>
            <param name="ID">display ID of the item to be retrieved</param>
            <returns>retrieved object or null</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.Clear">
            <summary>
            Clear all the display objects in this collection.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.Add(`0)">
            <summary>
            Add a new display object to the display object collection.
            </summary>
            <param name="dispObject">display object to be added</param>
            <exception cref="T:System.ArgumentNullException"> if 
            <paramref name="dispObject"/> is null</exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.Remove(`0)">
            <summary>
            Remove an object from the object collection
            </summary>
            <param name="dispObject">object to be removed from the collection
            </param>
            <returns>true if the object was removed, false otherwise</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.DispObjectDisconnect(Stemmer.Cvb.Forms.Overlays.OverlayBase)">
            <summary>
            One of the objects of this collection has been disconnected from the
            collection
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.Count">
            <summary>
            Number of objects currently inside the collection.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.Item(System.Int32)">
            <summary>
            Access one of the objects in the collection by index.
            </summary>
            <param name="index">index</param>
            <returns>object in the collection.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If 
            <paramref name="index"/>
            is outside the range 0...Count-1</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.Parent">
            <summary>
            Connection to the display to which this label collection belongs.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.GetEnumerator">
            <summary>
            IEnumerable implementation.
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            IEnumerable implementation.
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.Contains(`0)">
            <summary>
            Determines whether this collection contains a specific value.
            </summary>
            <param name="item">The object to locate in this collection.</param>
            <returns>true if <paramref name="item"/> is found, false otherwise.
            </returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copy the whole collection into an array, starting at the given array
            index.
            </summary>
            <param name="array">destination array</param>
            <param name="arrayIndex">array index at which to start in 
            <paramref name="array"/></param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="array"/> is
            null</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If 
            <paramref name="arrayIndex"/> is less than 0</exception>
            <exception cref="T:System.ArgumentException">If the number of elements in this
            collection is greater than the available space from
            <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/></exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.IsReadOnly">
            <summary>
            Clarifies that the collection is not Readonly.
            </summary>
            <remarks>Property is required by the IList interface.
            </remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.IndexOf(`0)">
            <summary>
            Retrieve a list index for an object.
            </summary>
            <param name="item">item to retrieve the index for</param>
            <returns>index of <paramref name="item"/> or -1 if the item is not
            contained in the list.</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.Insert(System.Int32,`0)">
            <summary>
            Insert a new item at a defined list position.
            </summary>
            <param name="index">position at which to insert</param>
            <param name="dispObject">item to be inserted</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/>
            is outside the range 0..Count-1</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="dispObject"/>
            is a null reference</exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.DisplayObjectList`1.RemoveAt(System.Int32)">
            <summary>
            Remove the display object at the given index.
            </summary>
            <param name="index">Index at which to remove the display object.
            </param>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.OverlayList">
            <summary>
            Label collection object.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayList.#ctor(Stemmer.Cvb.Forms.Controls.Display)">
            <summary>
            ctor
            </summary>
            <param name="parent">owning display</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayList.ClearAll_Impl">
            <summary>
            remove all labels from the display in one unmanaged call
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayList.Clear``1">
            <summary>
            Remove all overlays of a specific type.
            </summary>
            <typeparam name="TObj">type of overlays to be removed</typeparam>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo">
            <summary>
            Object gathering all relevant information about an installed overlay
            plugin.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo.Empty">
            <summary>
            The null element
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo.#ctor(System.String,System.Guid,System.Int32,System.Int32)">
            <summary>
            Constructor that initializes all the information that is available 
            from an overlay plugin's registry entry
            </summary>
            <param name="name">friendly name of the OPI</param>
            <param name="guid">GUID with which to generate the OPI</param>
            <param name="numVertices">the number of vertices necessary to define 
            the OPI</param>
            <param name="numVerticesUsed">the number of vertices available for 
            interaction</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo.InteractionVertices">
            <summary>
            Number of vertices that are being used for user interaction
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo.DefinitionVertices">
            <summary>
            Number of vertices that are necessary to define the overlay plugin's
            appearance
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo.Guid">
            <summary>
            The GUID that is necessary to instantiate the plugin.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo.Name">
            <summary>
            The "friendly-name" of the plugin.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo.CompareTo(System.Object)">
            <summary>
            IComparable implementation
            </summary>
            <param name="obj">object to compare to</param>
            <returns>
            <list type="table">
              <listheader>
                <term>value</term>
                <description>meaning</description>
              </listheader>
              <item>
                <term>Less than zero</term>
                <description>if the name of this overlay plugin precedes that of 
                the overlay plugin referred to by <paramref name="obj"/>
                </description>
              </item>
              <item>
                <term>0</term>
                <description>if the name of this overlay plugin is identical to 
                that of the overlay plugin referred to by <paramref name="obj"/>
                </description>
              </item>
              <item>
                <term>-1</term>
                <description>if the name of this overlay plugin follows that of 
                the overlay plugin referred to by <paramref name="obj"/> or if
                <paramref name="obj"/> is null.
                </description>
              </item>
            </list>
            </returns>
            <exception cref="T:System.InvalidCastException">if <paramref name="obj"/> does
            not refer to an object derived from <see cref="T:Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo"/>.
            </exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo.CompareTo(Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo)">
            <summary>
            IComparable implementation
            </summary>
            <param name="other">object to compare to</param>
            <returns>
            <list type="table">
              <listheader>
                <term>value</term>
                <description>meaning</description>
              </listheader>
              <item>
                <term>Less than zero</term>
                <description>if the name of this overlay plugin precedes that of 
                the overlay plugin referred to by <paramref name="other"/>
                </description>
              </item>
              <item>
                <term>0</term>
                <description>if the name of this overlay plugin is identical to 
                that of the overlay plugin referred to by <paramref name="other"/>
                </description>
              </item>
              <item>
                <term>-1</term>
                <description>if the name of this overlay plugin follows that of 
                the overlay plugin referred to by <paramref name="other"/>.
                </description>
              </item>
            </list>
            </returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.OverlayDictionary">
            <summary>
            Dictionary that provides access to the list of installed CVB overlay 
            plugins.
            </summary>
            <remarks>Not to be used directly; access through the property 
            Display.InstalledOverlays instead!</remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.#cctor">
            <summary>
            Internal constructor for the list of installed overlay plugins
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.collection_">
            <summary>
            will store the collection of available overlay plugins
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.BuildDictionaryFromRegistry">
            <summary>
            Build the collection of available overlay plugins from the information
            stored inside the registry
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.Count">
            <summary>
            Number of available overlay plugins.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.Item(System.Int32)">
            <summary>
            Access overlay plugin by means of a numerical index
            </summary>
            <param name="index">index of the item to get</param>
            <returns>Overlay Plugin Information</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If 
            <paramref name="index"/> is out of range.</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.Item(System.String)">
            <summary>
            Retrieve overlay plugin information by means of a string key 
            containing the plugin's friendly name
            </summary>
            <param name="key"></param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException">when trying to invoke the set
            accessor of the indexer (this collection is strictly read-only).
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.Keys">
            <summary>
            Get the collection of keys in the dictionary
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.Values">
            <summary>
            Get the collection of values in the dictionary
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.Add(System.String,Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo)">
            <summary>
            Add a new entry.
            </summary>
            <remarks>
            As this dictionary is read-only, Add will <i>always</i>
            raise a NotSupportedException.
            </remarks>
            <param name="key">ignored</param>
            <param name="value">ignored</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.ContainsKey(System.String)">
            <summary>
            Check if a specific key exists in the collection
            </summary>
            <param name="key">key to be checked</param>
            <returns>true if the key exists, false otherwise</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.Remove(System.String)">
            <summary>
            Remove a value with the specified key.
            </summary>
            <remarks>
            As this dictionary is read-only, Remove will <i>always</i>
            raise a NotSupportedException.
            </remarks>
            <param name="key">ignored</param>
            <returns>nothing</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.TryGetValue(System.String,Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo@)">
            <summary>
            Try to get a value from the collection. Will not raise and exception
            if the specified key does not exist.
            </summary>
            <param name="key">key of the entry to be retrieved</param>
            <param name="value">retrieved value</param>
            <returns>true if there was a value for the specified key, false 
            otherwise</returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.IsReadOnly">
            <summary>
            This collection is read-only
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo})">
            <summary>
            Remove an entry from the dictionary
            </summary>
            <remarks>
            As this dictionary is read-only, Remove will <i>always</i>
            raise a <see cref="T:System.NotSupportedException"/>.
            </remarks>
            <param name="entry">ignored</param>
            <returns>Nothing (will always raise a 
            <see cref="T:System.NotSupportedException"/>).</returns>
            <exception cref="T:System.NotSupportedException">Will always be raised as this
            dictionary is read only.</exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo}[],System.Int32)">
            <summary>
            copy the contents of the collection into an array
            </summary>
            <param name="entries">entries array into which to copy</param>
            <param name="index">index at which to start copying</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="entries"/>
            is null</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If 
            <paramref name="index"/> is less than 0</exception>
            <exception cref="T:System.ArgumentException">If the number of elements in this
            collection is greater than the available space from
            <paramref name="index"/> to the end of the destination
            <paramref name="entries"/></exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo})">
            <summary>
            Check if a specific entry is part of the collection
            </summary>
            <param name="entry">entry to be checked for</param>
            <returns>true if the entry exists inside the collection, false
            otherwise</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.Clear">
            <summary>
            Will raise a NotSupportedException because this dictionary is 
            readonly.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo})">
            <summary>
            Will raise a NotSupportedException because this dictionary is 
            read only.
            </summary>
            <param name="entry">ignored</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.GetEnumerator">
            <summary>
            Enumeration implementation
            </summary>
            <returns><see cref="T:System.Collections.Generic.IEnumerator`1"/> for this collection.</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Enumeration implementation.
            </summary>
            <returns><see cref="T:System.Collections.IEnumerator"/> for this collection.</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.OverlayPluginBase">
            <summary>
            Overlay plugin object
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayPluginBase.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,System.Drawing.Point[],Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo,System.Object)">
            <summary>
            ctor for Overlay objects with user data
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">dragable flag</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="vertices">vertices for the object</param>
            <param name="info">opi info (GUID, friendly name)</param>
            <param name="tag">object to be associated with this overlay</param>
            <exception cref="T:System.ArgumentException">If the information about the 
            Overlay is missing (i.e. <paramref name="info"/> equals
            OverlayInfo.Empty)</exception>
            <exception cref="T:System.ArithmeticException">If the number of vertices is 
            insufficient for the overlay to be created.</exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayPluginBase.Clone">
            <summary>
            virtual copy constructor for overlay objects
            </summary>
            <returns>The cloned overlay object.</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayPluginBase.CreateOverlayWrapper">
            <summary>
            Overrideable creation function for overlay wrapper objects
            </summary>
            <returns>a newly create overlay plugin wrapper</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayPluginBase.Overlay_ConnectedToDisplay">
            <summary>
            Connect the overlay plugin to the display by means of an OPI wrapper
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayPluginBase.Overlay_DisconnectedFromDisplay(System.Boolean)">
            <summary>
            Remove an OPI from a display (effectively: kill it...)
            </summary>
            <param name="handBackID"><c>true</c> if the overlay's display ID is
            to be handed back to the display, <c>false</c> otherwise.</param>
            <exception cref="T:System.ObjectDisposedException">If the display we are 
            trying to work on has already been disposed</exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.OverlayPluginBase.UpdateVertices">
            <summary>
            update the set of vertices being used by the overlay object
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.OverlayPluginBase.opi_">
            <summary>
            Wrapper for the unmanaged OPI object
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.OverlayPluginBase.opiInfo_">
            <summary>
            information about the OPI that is being used by this object
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayPluginBase.Name">
            <summary>
            Friendly name of the overlay plugin
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayPluginBase.Filled">
            <summary>
            Specifies whether or not the OPI should be painted filled
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.OverlayPluginBase.XORPainting">
            <summary>
            specifies the paint mode (opaque or XOR)
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.OverlayPluginBase.vertices_">
            <summary>
            Array with the most up-to-date construction vertices
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.ExtendedOverlayPluginBase`1">
            <summary>
            Base class for all overlays that come with a plugin data structure
            </summary>
            <typeparam name="TData">Type of the information container for the
            plugin.</typeparam>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.ExtendedOverlayPluginBase`1.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,System.Drawing.Point[],Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo,System.Object)">
            <summary>
            Standard constructor for overlays with a plugin data structure.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="vertices">vertices for the opi</param>
            <param name="info">which opi</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.ExtendedOverlayPluginBase`1.CreateOverlayWrapper">
            <summary>
            overrideable creation function for overlay wrapper objects
            </summary>
            <returns>a newly create overlay plugin wrapper</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.ExtendedOverlayPluginBase`1.CreatePluginData">
            <summary>
            Inheritors must override this and in the override prepare the plugin
            data reflecting the OPI's current state (depending usually on the 
            current values of the Overlay object's properties)
            </summary>
            <returns>Return the fully created plugin data structure here.
            </returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.ExtendedOverlayPluginBase`1.OpiDataPropertyChanged">
            <summary>
            A property that is relevant for the opi data structure has been 
            changed; as a consequence, the opi may potentially need to be 
            re-generated in order to reflect the changes.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.ExtendedOverlayPluginBase`1.OpiDataPropertyChanged(System.Boolean)">
            <summary>
            A property that is relevant for the opi data structure has been 
            changed; as a consequence, the opi may potentially need to be 
            re-generated in order to reflect the changes.
            </summary>
            <param name="skipDestroyAndCreate">set to true if the destroy-and-
            recreate step is to be omitted (e.g. if multiple settings are about
            to change)</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.ExtendedOverlayPluginBase`1.opiData_">
            <summary>
            The plugin-specific data structure
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.PenStyleOverlayPluginBase">
            <summary>
            Base class for all overlays that use pen width and pen style through
            a TPenStylePluginData structure.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PenStyleOverlayPluginBase.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,System.Drawing.Point[],Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo,System.Object)">
            <summary>
            Constructor for pen-styled overlay plugins.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="vertices">vertices for the opi</param>
            <param name="info">which opi</param>
            <param name="tag">object to be associated with this overlay</param>
            <remarks>This constructor initializes the object with a pen width of 1
            and a dashStyle of "Solid"</remarks>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PenStyleOverlayPluginBase.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,System.Drawing.Point[],Stemmer.Cvb.Forms.Overlays.OverlayPluginInfo,System.Drawing.Drawing2D.DashStyle,System.Int32,System.Object)">
            <summary>
            Constructor for pen-styled overlay plugins.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="vertices">vertices for the opi</param>
            <param name="info">which opi</param>
            <param name="dashStyle">dash style</param>
            <param name="penWidth">pen width</param>
            <param name="tag">object to be associated with this overlay</param>
            <exception cref="T:System.ArgumentException">If <paramref name="penWidth"/> is
            less than 0 or <paramref name="dashStyle"/> is Custom</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.PenStyleOverlayPluginBase.PenWidth">
            <summary>
            Width of the pen to be used for painting.
            </summary>
            <exception cref="T:System.ArgumentException">If the pen width is 0 or less
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.PenStyleOverlayPluginBase.DashStyle">
            <summary>
            Dash style to be used for painting.
            </summary>
            <remarks>Dash style "Custom" is not supported.</remarks>
            <remarks>Dash style setting will only have an effect if the pen width
            has been set to 1. If pen width is greater than 1, a solid brush will
            always be used. This is a limitation coming from the GDI function
            CreatePen that is being used internally by the overlay plugin.
            </remarks>
            <exception cref="T:System.ArgumentException">If the dash style is "Custom"
            </exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PenStyleOverlayPluginBase.CreatePluginData">
            <summary>
            Build the plugin data structure using the current settings.
            </summary>
            <returns>The overlay plugin data structure.</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.PixelListOverlay">
            <summary>
            A pixel list overlay that marks each pixel individually.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Collections.Generic.IEnumerable{System.Drawing.Point},System.Object)">
            <summary>
            Standard constructor for pixel list overlays.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="color">color of the pixel markers</param>
            <param name="penWidth">width of the pen with which to paint the 
            pixel markers</param>
            <param name="dashStyle">style in which to paint the pixel markers
            </param>
            <param name="tag">object to be associated with this overlay</param>
            <param name="pixels">pixels to mark</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Collections.Generic.IEnumerable{System.Drawing.Point})">
            <summary>
            Standard constructor for pixel list overlays.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="color">color of the pixel markers</param>
            <param name="penWidth">width of the pen with which to paint the 
            pixel markers</param>
            <param name="dashStyle">style in which to paint the pixel markers
            </param>
            <param name="pixels">pixels to mark</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.Finalize">
            <summary>
            PixelList overlay destructor
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.Clone">
            <summary>
            Virtual copy Constructor.
            </summary>
            <returns>The clones <see cref="T:Stemmer.Cvb.Forms.Overlays.PixelListOverlay"/> object.</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.Add(System.Drawing.Point)">
            <summary>
            Add a new pixel to the pixel list plugin.
            </summary>
            <param name="pixel">pixel to be added</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.Clear">
            <summary>
            remove all pixel from the pixel list plugin
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.Contains(System.Drawing.Point)">
            <summary>
            Contains method of the ICollection interface - check if a pixel is 
            part of the collection
            </summary>
            <param name="pixel">pixel to check for</param>
            <returns><c>true</c> if the <paramref name="pixel"/> is part of the
            overlay's pixel list, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.CopyTo(System.Drawing.Point[],System.Int32)">
            <summary>
            Copy the contents of the pixel list into an array starting at a given
            array index.
            </summary>
            <param name="array">target array for the copy operation</param>
            <param name="arrayIndex">index at which to start filling the array
            </param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.Remove(System.Drawing.Point)">
            <summary>
            Remove all instances of a given pixel from the list.
            </summary>
            <param name="pixel">pixel to be removed</param>
            <returns>true if something was removed, false otherwise</returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.Count">
            <summary>
            Number of pixels currently in the list.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.IsReadOnly">
            <summary>
            Declare that this collection can be read and written.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.GetEnumerator">
            <summary>
            Enumeration implementation
            </summary>
            <returns><see cref="T:System.Collections.Generic.IEnumerator`1"/> for this pixel list.
            </returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            inner IEnumerator
            </summary>
            <returns><see cref="T:System.Collections.IEnumerator"/> for this pixel list.</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.CollectionToPixelList(System.Collections.Generic.IEnumerable{System.Drawing.Point},System.IntPtr@)">
            <summary>
            Internal conversion method between CVB pixel lists and Point 
            containers</summary>
            <param name="pixels">pixels to be converted</param>
            <param name="pl">pixel list to cnvert to; may be empty, in which case
            a new pixel list will be created</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.ReadPixels">
            <summary>
            Read the current state of the pixels (which might have changed due to
            user interaction) into the internal pixel list.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.pl_">
            <summary>
            the internally used pixel list.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.plBackup_">
            <summary>
            the "Backup" pixel list in case pl_ is empty.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.Item(System.Int32)">
            <summary>
            index-based point access
            </summary>
            <param name="index">index of the point to be accessed</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If the index is outside the
            range of elements in the collection</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.PenWidth">
            <summary>
            Width of the pen to be used for painting.
            </summary>
            <exception cref="T:System.ArgumentException">If the pen width is 0 or less
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.DashStyle">
            <summary>
            Dash style to be used for painting.
            </summary>
            <remarks>Dash style "Custom" is not supported.</remarks>
            <remarks>Dash style setting will only have an effect if the pen width
            has been set to 1. If pen width is greater than 1, a solid brush will
            always be used. This is a limitation coming from the GDI function
            CreatePen that is being used internally by the overlay plugin.
            </remarks>
            <exception cref="T:System.ArgumentException">If the dash style is "Custom"
            </exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PixelListOverlay.CreatePluginData">
            <summary>
            Create the plugin data structure for later use
            </summary>
            <returns>The overlay plugin data structure.</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay">
            <summary>
            A polygon overlay.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Drawing.Point[],System.Object)">
            <summary>
            Standard constructor for Polyline overlays.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="color">color of the polygon</param>
            <param name="penWidth">width of the pen used for painting</param>
            <param name="dashStyle">style in which to paint the polyline</param>
            <param name="pixels">vertex list</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Drawing.Point[])">
            <summary>
            Standard constructor for Polyline overlays.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="color">color of the polygon</param>
            <param name="penWidth">width of the pen used for painting</param>
            <param name="dashStyle">style in which to paint the polyline</param>
            <param name="pixels">vertex list</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.Clone">
            <summary>
            Virtual copy Constructor.
            </summary>
            <returns>The cloned <see cref="T:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay"/> object.</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.Add(System.Drawing.Point)">
            <summary>
            Add a new pixel to the polygon plugin
            </summary>
            <param name="pixel">pixel to be added</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.Clear">
            <summary>
            remove all pixel from the pixel list plugin
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.Contains(System.Drawing.Point)">
            <summary>
            Contains method of the ICollection interface - check if a pixel is 
            part of the collection
            </summary>
            <param name="pixel">pixel to check for</param>
            <returns><c>true</c> if the <paramref name="pixel"/> is part of the
            overlay's vertex list, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.CopyTo(System.Drawing.Point[],System.Int32)">
            <summary>
            copy the contents of the polygon into an array starting at a given
            array index
            </summary>
            <param name="array">target array for the copy operation</param>
            <param name="arrayIndex">index at which to start filling the array
            </param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.Remove(System.Drawing.Point)">
            <summary>
            remove all instances of a given pixel from the polygon
            </summary>
            <param name="pixel">pixel to be removed</param>
            <returns>true if something was removed, false otherwise</returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.Count">
            <summary>
            number of pixels currently in the list (it is sufficient to give the
            count of pl since the last pixel list generation because user 
            interaction cannot change the number of elements
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.IsReadOnly">
            <summary>
            tell that this collection can be read and written
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.GetEnumerator">
            <summary>
            Enumeration implementation
            </summary>
            <returns><see cref="T:System.Collections.Generic.IEnumerator`1"/> for this plugin's vertex 
            collection.</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            inner IEnumerator
            </summary>
            <returns><see cref="T:System.Collections.IEnumerator"/> for this plugin's vertex 
            collection.</returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.Item(System.Int32)">
            <summary>
            index-based point access
            </summary>
            <param name="index">index of the point to be accessed</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If the index is outside the
            range of elements in the collection</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.PenWidth">
            <summary>
            Width of the pen to be used for painting.
            </summary>
            <exception cref="T:System.ArgumentException">If the pen width is 0 or less
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.DashStyle">
            <summary>
            Dash style to be used for painting.
            </summary>
            <remarks>Dash style "Custom" is not supported.</remarks>
            <remarks>Dash style setting will only have an effect if the pen width
            has been set to 1. If pen width is greater than 1, a solid brush will
            always be used. This is a limitation coming from the GDI function
            CreatePen that is being used internally by the overlay plugin.
            </remarks>
            <exception cref="T:System.ArgumentException">If the dash style is "Custom"
            </exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.PolyLineOverlay.CreatePluginData">
            <summary>
            Create the plugin data structure for later use
            </summary>
            <returns>The overlay plugin data structure.</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.RectOverlay">
            <summary>
            An overlay representing a Rect object.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RectOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,Stemmer.Cvb.Rect,System.Object)">
            <summary>
            Constructor for a Rectangle overlay
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">drag able or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="rect">Rectangle's extent</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RectOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,Stemmer.Cvb.Rect)">
            <summary>
            Constructor for a Rectangle overlay
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">drag able or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="rect">Rectangle's extent</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RectOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,Stemmer.Cvb.Rect,System.Drawing.Drawing2D.DashStyle,System.Int32,System.Object)">
            <summary>
            Constructor for a Rectangle overlay
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">drag able or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="rect">Rectangle's extent</param>
            <param name="dashStyle">dash style for painting</param>
            <param name="penWidth">pen width for painting</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RectOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,Stemmer.Cvb.Rect,System.Drawing.Drawing2D.DashStyle,System.Int32)">
            <summary>
            Constructor for a Rectangle overlay
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">drag able or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="rect">Rectangle's extent</param>
            <param name="dashStyle">dash style for painting</param>
            <param name="penWidth">pen width for painting</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RectOverlay.Clone">
            <summary>
            Virtual copy constructor.
            </summary>
            <returns>The clones <see cref="T:Stemmer.Cvb.Forms.Overlays.RectOverlay"/> object.</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RectOverlay.op_Implicit(Stemmer.Cvb.Forms.Overlays.RectOverlay)~Stemmer.Cvb.Rect">
            <summary>
            Typecasting to System.Drawing.Rectangle makes life easier
            </summary>
            <param name="r">The <see cref="T:Stemmer.Cvb.Forms.Overlays.RectOverlay"/> to be converted.</param>
            <returns>The <see cref="T:Stemmer.Cvb.Rect"/> that this 
            <see cref="T:Stemmer.Cvb.Forms.Overlays.RectOverlay"/> represents on the display.</returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.RectOverlay.Rect">
            <summary>
            Extent of the visible rectangle
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.RotatedCrossHairOverlay">
            <summary>
            A simple Crosshair overlay.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RotatedCrossHairOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Drawing.Size,System.Object)">
            <summary>
            Constructor for cross hair plugins
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">dragable</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="location">position</param>
            <param name="size">size of the horizontal and vertical bar</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RotatedCrossHairOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Constructor for cross hair plugins
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">dragable</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="location">position</param>
            <param name="size">size of the horizontal and vertical bar</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RotatedCrossHairOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Drawing.Size,System.Drawing.Drawing2D.DashStyle,System.Int32,System.Object)">
            <summary>
            Constructor for cross hair plugins
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">dragable</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="location">position</param>
            <param name="size">size of the horizontal and vertical bar</param>
            <param name="dashStyle">dash style for painting</param>
            <param name="penWidth">pen width for painting</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RotatedCrossHairOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Drawing.Size,System.Drawing.Drawing2D.DashStyle,System.Int32)">
            <summary>
            Constructor for cross hair plugins
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">dragable</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="location">position</param>
            <param name="size">size of the horizontal and vertical bar</param>
            <param name="dashStyle">dash style for painting</param>
            <param name="penWidth">pen width for painting</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RotatedCrossHairOverlay.Clone">
            <summary>
            virtual copy ctor
            </summary>
            <returns>The cloned <see cref="T:Stemmer.Cvb.Forms.Overlays.RotatedCrossHairOverlay"/> object.
            </returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.RotatedCrossHairOverlay.Filled">
            <summary>
            Filled painting is not supported on this overlay.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.RotatedCrossHairOverlay.Size">
            <summary>
            The sizes of the bounding box for the two bars.
            </summary>
            <remarks>Note that the bars are not perpendicular when choosing a size
            where width and height differ.</remarks>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.RotatedCrossHairOverlay.Location">
            <summary>
            Position of the cross hair.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.RotatedRectangleOverlay">
            <summary>
            A Rotated Rect.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RotatedRectangleOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,System.Drawing.Point,System.Int32,System.Int32,Stemmer.Cvb.Angle,System.Object)">
            <summary>
            Standard Constructor for rotated rectangle overlays.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="location">paint position</param>
            <param name="color">color of the rotated rectangle</param>
            <param name="filled">paint filled (true) or empty (false)</param>
            <param name="height">height of the rectangle</param>
            <param name="width">width of the rectangle</param>
            <param name="rotation">rotation of the rectangle</param>
            <param name="xorPaint">paint mode of the rectangle</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RotatedRectangleOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,System.Drawing.Point,System.Int32,System.Int32,Stemmer.Cvb.Angle)">
            <summary>
            Standard Constructor for rotated rectangle overlays.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="location">paint position</param>
            <param name="color">color of the rotated rectangle</param>
            <param name="filled">paint filled (true) or empty (false)</param>
            <param name="height">height of the rectangle</param>
            <param name="width">width of the rectangle</param>
            <param name="rotation">rotation of the rectangle</param>
            <param name="xorPaint">paint mode of the rectangle</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RotatedRectangleOverlay.Clone">
            <summary>
            virtual copy constructor
            </summary>
            <returns>The cloned <see cref="T:Stemmer.Cvb.Forms.Overlays.RotatedRectangleOverlay"/> object.
            </returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.RotatedRectangleOverlay.Location">
            <summary>
            Position of the left top corner of the Rectangle
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.RotatedRectangleOverlay.Width">
            <summary>
            Width of the rectangle.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.RotatedRectangleOverlay.Height">
            <summary>
            Height of the rectangle.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.RotatedRectangleOverlay.Rotation">
            <summary>
            Rotation of the rectangle
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RotatedRectangleOverlay.CreatePluginData">
            <summary>
            Create the plugin data structure for later use
            </summary>
            <returns>The overlay plugin data structure.</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.SmartRectOverlay">
            <summary>
            A rectangle object 
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.SmartRectOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,Stemmer.Cvb.Rect,System.Object)">
            <summary>
            Constructor for a Smart Rectangle Overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">drag able or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="rect">rectangle's extent</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.SmartRectOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Boolean,Stemmer.Cvb.Rect)">
            <summary>
            Constructor for a Smart Rectangle Overlay.
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">drag able or not</param>
            <param name="color">color</param>
            <param name="xorPaint">paint mode</param>
            <param name="filled">paint mode</param>
            <param name="rect">rectangle's extent</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.SmartRectOverlay.Clone">
            <summary>
            Virtual copy Constructor.
            </summary>
            <returns>The cloned <see cref="T:Stemmer.Cvb.Forms.Overlays.SmartRectOverlay"/> object.</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.SmartRectOverlay.OnConnectToDisplay(Stemmer.Cvb.Forms.Controls.Display)">
            <summary>
            hook into the "ConnectToDisplay" method to patch the problem that the
            OPI only paints its drag boxes upon the first refresh...
            </summary>
            <param name="disp">The <see cref="T:Stemmer.Cvb.Forms.Controls.Display"/> to which this overlay
            is being connected.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.SmartRectOverlay.op_Implicit(Stemmer.Cvb.Forms.Overlays.SmartRectOverlay)~Stemmer.Cvb.Rect">
            <summary>
            Typecasting to System.Drawing.Rectangle makes life easier
            </summary>
            <param name="r">The <see cref="T:Stemmer.Cvb.Forms.Overlays.SmartRectOverlay"/> object to be
            converted.</param>
            <returns>The <see cref="T:Stemmer.Cvb.Rect"/> that this overlay object 
            represents on the display.</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.TargetStyle">
            <summary>
            Target type as used by Target Overlay.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.TargetStyle.Circular">
            <summary>
            round targets
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.TargetStyle.Rectangle">
            <summary>
            rectangular targets
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.TargetStyle.RoundedRectangle">
            <summary>
            rectangular targets with rounded corners
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.TargetOverlay">
            <summary>
            A "target" - in principle a stack of crosshair plugins
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.TargetOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Int32,System.Drawing.Drawing2D.DashStyle,Stemmer.Cvb.Forms.Overlays.TargetStyle,System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
            <summary>
            General constructor for target objects.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="color">color</param>
            <param name="XORPaint">paint mode</param>
            <param name="location">paint position</param>
            <param name="penWidth">pen width</param>
            <param name="dashStyle">pen style</param>
            <param name="targetStyle">target style</param>
            <param name="count">number of circles</param>
            <param name="distance">distance between circles</param>
            <param name="roundRadius">round-radius</param>
            <param name="crossHairSize">size of the central crosshair</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.TargetOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Int32,System.Drawing.Drawing2D.DashStyle,Stemmer.Cvb.Forms.Overlays.TargetStyle,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            General constructor for target objects.
            </summary>
            <param name="text">status line text</param>
            <param name="canDrag">drag-ability</param>
            <param name="color">color</param>
            <param name="XORPaint">paint mode</param>
            <param name="location">paint position</param>
            <param name="penWidth">pen width</param>
            <param name="dashStyle">pen style</param>
            <param name="targetStyle">target style</param>
            <param name="count">number of circles</param>
            <param name="distance">distance between circles</param>
            <param name="roundRadius">round-radius</param>
            <param name="crossHairSize">size of the central crosshair</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.TargetOverlay.roundRadius_">
            <summary>
            to be used by inheritors only
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.TargetOverlay.targetStyle_">
            <summary>
            to be used by inheritors only
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.TargetOverlay.CrosshairSize">
            <summary>
            Size of the crosshair.
            </summary>
            <exception cref="T:System.ArgumentException">when trying to specify a crosshair
            size less than 0</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.TargetOverlay.Distance">
            <summary>
            Distance between two adjacent circles or rectangles.
            </summary>
            <exception cref="T:System.ArgumentException">when trying to specify a distance
            of less than 0</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.TargetOverlay.Count">
            <summary>
            Number of crosshairs to be stacked.
            </summary>
            <exception cref="T:System.ArgumentException">when trying to specify a value
            less than 1</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.TargetOverlay.DashStyle">
            <summary>
            Dash style to be used for painting.
            </summary>
            <remarks>Dash style "Custom" is not supported.</remarks>
            <remarks>Dash style setting will only have an effect if the pen width
            has been set to 1. If pen width is greater than 1, a solid brush will
            always be used. This is a limitation coming from the GDI function
            CreatePen that is being used internally by the overlay plugin.
            </remarks>
            <exception cref="T:System.ArgumentException">If the dash style is "Custom"
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.TargetOverlay.PenWidth">
            <summary>
            Width of the pen to be used for painting.
            </summary>
            <exception cref="T:System.ArgumentException">If the pen width is 0 or less
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.TargetOverlay.Filled">
            <summary>
            Filled property is always false on this overlay.
            </summary>
            <exception cref="T:System.NotSupportedException">when trying to set a value
            of "true".
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.TargetOverlay.Location">
            <summary>
            position of the center of the circle
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.TargetOverlay.CreatePluginData">
            <summary>
            Create the plugin data structure for later use
            </summary>
            <returns>The overlay plugin data structure.</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.CircularTargetOverlay">
            <summary>
            Target overlay consisting of stacked circles
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CircularTargetOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor for circular targets targets
            </summary>
            <param name="text">status line text for the overlay</param>
            <param name="canDrag">dragability</param>
            <param name="color">color</param>
            <param name="XORPaint">xor painting?</param>
            <param name="location">center position</param>
            <param name="penWidth">pen width to be used</param>
            <param name="dashStyle">dash style to be used</param>
            <param name="count">number of circles to stack</param>
            <param name="distance">distance between adjacent circles</param>
            <param name="crossHairSize">size of the crosshair</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.CircularTargetOverlay.Clone">
            <summary>
            Copy constructor for circular targets,.
            </summary>
            <returns>The cloned <see cref="T:Stemmer.Cvb.Forms.Overlays.CircularTargetOverlay"/> object.
            </returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.RectangularTargetOverlay">
            <summary>
            Target overlay consisting of stacked rounded rectangles
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RectangularTargetOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor for circular targets targets
            </summary>
            <param name="text">status line text for the overlay</param>
            <param name="canDrag">dragability</param>
            <param name="XORPaint">xor painting?</param>
            <param name="color">color</param>
            <param name="location">center position</param>
            <param name="penWidth">pen width to be used</param>
            <param name="dashStyle">dash style to be used</param>
            <param name="count">number of circles to stack</param>
            <param name="distance">distance between adjacent circles</param>
            <param name="crossHairSize">size of the crosshair</param>
            <param name="roundedRadius">radius for rounding the rectangle corners
            </param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.RectangularTargetOverlay.Clone">
            <summary>
            Copy Constructor for circular targets.
            </summary>
            <returns>The cloned <see cref="T:Stemmer.Cvb.Forms.Overlays.RectangularTargetOverlay"/> object.
            </returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.RectangularTargetOverlay.RoundRadius">
            <summary>
            Rounding radius for the rectangles' corners.
            </summary>
            <exception cref="T:System.ArgumentException">when trying to specify a radius
            of less than 0</exception>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.TextOverlay">
            <summary>
            A label with selectable font properties (note: not all available font 
            attributes are supported...).
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.TextOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Drawing.Point,System.Drawing.Font,System.Boolean,System.Double,System.Object)">
            <summary>
            Constructor for text overlays
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">dragable or not</param>
            <param name="color">color</param>
            <param name="location">label's top left position</param>
            <param name="font">font for drawing the label (note that some of the 
            font properties are ignored)</param>
            <param name="showMarker">show a crosshair on the focus point?</param>
            <param name="rotation">rotation of the text (in radians)</param>
            <param name="tag">object to be associated with this overlay</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.TextOverlay.#ctor(System.String,System.Boolean,System.Drawing.Color,System.Drawing.Point,System.Drawing.Font,System.Boolean,System.Double)">
            <summary>
            Constructor for text overlays
            </summary>
            <param name="text">status line string</param>
            <param name="canDrag">dragable or not</param>
            <param name="color">color</param>
            <param name="location">label's top left position</param>
            <param name="font">font for drawing the label (note that some of the 
            font properties are ignored)</param>
            <param name="showMarker">show a crosshair on the focus point?</param>
            <param name="rotation">rotation of the text (in radians)</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.TextOverlay.Clone">
            <summary>
            Virtual copy Constructor
            </summary>
            <returns>The cloned <see cref="T:Stemmer.Cvb.Forms.Overlays.TextOverlay"/> object.</returns>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.TextOverlay.XORPainting">
            <summary>
            XOR painting is not possible...
            </summary>
            <exception cref="T:System.NotSupportedException">when trying to set true
            (inheritance dictates that a set accessor needs to be present).
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.TextOverlay.Filled">
            <summary>
            Filled property is always false on this overlay.
            </summary>
            <exception cref="T:System.NotSupportedException">when trying to set a value
            of "true".
            </exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.TextOverlay.Location">
            <summary>
            Position of the text.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.TextOverlay.Font">
            <summary>
            Font to be used for the text.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.TextOverlay.ShowFocus">
            <summary>
            Show or hide the focus point of the text overlay.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.TextOverlay.Rotation">
            <summary>
            Rotation of the text in radians.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.TextOverlay.DestroyAndCreatePropertyChanged">
            <summary>
            hook into the DestroyAndCreatePropertyChanged handling to make sure
            the Text field of the opiData struct contains up-to-date info
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.TextOverlay.OnConnectToDisplay(Stemmer.Cvb.Forms.Controls.Display)">
            <summary>
            hook into the "ConnectToDisplay" method to patch the problem that the
            OPI only paints its cross hair but not the text upon first 
            instantiation
            </summary>
            <param name="disp">The <see cref="T:Stemmer.Cvb.Forms.Controls.Display"/> that this overlay is
            beeing connected to.</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.TextOverlay.CreatePluginData">
            <summary>
            Create the plugin data structure according to the current set of 
            properties.
            </summary>
            <returns>The overlay plugin data structure.</returns>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.UserObjectImpl">
            <summary>
            User-definable overlay. This type of overlay does not use a predefined
            appearance, but needs to be user-drawn using a subset of the GDI 
            functionality exported by the 
            <see cref="T:Stemmer.Cvb.Aux.Drawing.UnmanagedGraphics"/> object.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.UserObjectImpl.#ctor(System.IntPtr,System.String,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Drawing.Point[],System.Windows.Forms.Cursor[])">
            <summary>
            Construct a user object.
            </summary>
            <param name="text">status line text of the object</param>
            <param name="canDrag">If true, the object becomes dragable, if false
            it will remain fixed</param>
            <param name="xorPaint">set to true if using xor paint is desired
            </param>
            <param name="ID">integer id of the object</param>
            <param name="display">display to create the object on</param>
            <param name="vertices">paint vertices to use</param>
            <param name="addCenterVertex">when <code>true</code>, and additional
            drag handle will be created automatically in the object's center of
            mass</param>
            <param name="cursors">array of cursors to use for the drag handles
            (may be null, in which case the default drag handle cursor will be
            used; if the array is not long enough, it will be filled up with
            default drag handle cursor entries internally)</param>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.UserOverlay">
            <summary>
            User-definable overlay. This type of overlay does not use a predefined
            appearance, but needs to be user-drawn using a subset of the GDI 
            functionality exported by the 
            <see cref="T:Stemmer.Cvb.Aux.Drawing.UnmanagedGraphics"/> object.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.UserOverlay.addCenterVertex_">
            <summary>
            field that memorizes the ctor flag of the same name
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.UserOverlay.cursors_">
            <summary>
            field that memorizes the cursor array
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.UserOverlay.#ctor(System.String,System.Boolean,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point[],System.Windows.Forms.Cursor[])">
            <summary>
            Construct a user object.
            </summary>
            <param name="text">status line text of the object</param>
            <param name="canDrag">If true, the object becomes dragable, if false
            it will remain fixed</param>
            <param name="color">color to be memorized for painting</param>
            <param name="xorPaint">set to true to paint the overlay in xor mode
            </param>
            <param name="vertices">vertices to be used for painting</param>
            <param name="addCenterVertex">when <code>true</code>, and additional
            drag handle will be created automatically in the object's center of
            mass</param>
            <param name="cursors">array of cursors to use for the drag handles
            (may be null, in which case the default drag handle cursor will be
            used; if the array is not long enough, it will be filled up with
            default drag handle cursor entries internally)</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.UserOverlay.#ctor(System.String,System.Boolean,System.Boolean,System.Drawing.Color,System.Boolean,System.Drawing.Point[],System.Windows.Forms.Cursor[],System.Object)">
            <summary>
            Construct a user object.
            </summary>
            <param name="text">status line text of the object</param>
            <param name="canDrag">If true, the object becomes dragable, if false
            it will remain fixed</param>
            <param name="xorPaint">set to true to paint the overlay in xor mode
            </param>
            <param name="color">color to be memorized for painting</param>
            <param name="vertices">vertices to be used for painting</param>
            <param name="tag">object with which this label is to be associated
            </param>
            <param name="addCenterVertex">when <code>true</code>, and additional
            drag handle will be created automatically in the object's center of
            mass</param>
            <param name="cursors">array of cursors to use for the drag handles
            (may be null, in which case the default drag handle cursor will be
            used; if the array is not long enough, it will be filled up with
            default drag handle cursor entries internally)</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.UserOverlay.#ctor(Stemmer.Cvb.Forms.Overlays.UserOverlay)">
            <summary>
            copy ctor
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.UserOverlay.Overlay_ConnectedToDisplay">
            <summary>
            Add a label to a display.
            </summary>
            <exception cref="T:System.ObjectDisposedException">If the display we are 
            trying to work on has already been disposed</exception>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.UserOverlay.Overlay_DisconnectedFromDisplay(System.Boolean)">
            <summary>
            Remove a label from its display
            </summary>
            <param name="handBackID"><c>true</c> if the overlay plugin's display
            ID is to be handed back to the owning display, <c>false</c>
            otherwise.</param>
            <exception cref="T:System.ObjectDisposedException">If the display we are 
            trying to work on has already been disposed</exception>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.UserOverlay.Vertices">
            <summary>
            Pixel positions to paint the user object with. Modifying the Vertex
            positions will not change the appearance of the overlay and the 
            changes will in fact be overwritten in the next Paint event.
            Positions are in image coordinates, NOT in client coordinates.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.UserOverlay.XORPaint">
            <summary>
            Use or don't use XOR mode for painting.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.UserOverlay.Color">
            <summary>
            Color of the overlay.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.UserOverlay.impl_">
            <summary>
            Reference to the user base user object implementation.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.UserOverlay.UserPaintHandler(System.Object,Stemmer.Cvb.Aux.Overlays.PaintEventArgs)">
            <summary>
            UserPaintHandler catches the user paint event from the impl object
            and forwards it to the <see cref="M:Stemmer.Cvb.Forms.Overlays.UserOverlay.OnPaint(Stemmer.Cvb.Forms.Overlays.UserOverlayPaintEventArgs)"/>/<see cref="E:Stemmer.Cvb.Forms.Overlays.UserOverlay.Paint"/> of 
            this object.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.UserOverlay.OnPaint(Stemmer.Cvb.Forms.Overlays.UserOverlayPaintEventArgs)">
            <summary>
            Inheritors may override this method to change behavior.
            </summary>
            <param name="args">paint event arguments</param>
        </member>
        <member name="E:Stemmer.Cvb.Forms.Overlays.UserOverlay.Paint">
            <summary>
            Paint event that will be raised if the object needs to be painted.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.DragHandlesInUse">
            <summary>
            Enum making the evaluation of the currently moving drag handles on the
            event arguments easier.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.DragHandlesInUse.None">
            <summary>
            either we are currently not dragging, or no movement has been 
            detected
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.DragHandlesInUse.One">
            <summary>
            one drag handle is currently being dragged; its index is stored in the
            <see cref="P:Stemmer.Cvb.Forms.Overlays.UserOverlayPaintEventArgs.DragHandle"/> property
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.Overlays.DragHandlesInUse.All">
            <summary>
            All handles are being dragged simultaneously (usually because the
            virtual center vertex is being dragged)
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Overlays.UserOverlayPaintEventArgs">
            <summary>
            Paint arguments for UserOverlays. These are basically identical with the
            <see cref="T:System.Windows.Forms.PaintEventArgs"/> objects from the auxiliary DLL, with the
            addition of the drag handle index.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.Overlays.UserOverlayPaintEventArgs.#ctor(Stemmer.Cvb.Aux.Overlays.PaintEventArgs,System.Int32)">
            <summary>
            ctor
            </summary>
            <param name="innerEventArgs">event arguments as provided by the
            managed/unmanaged hybrid object (i.e. from the unmanaged paint 
            callback)</param>
            <param name="dragHandle">the handle that is currently being 
            dragged</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.UserOverlayPaintEventArgs.DragHandlesInUse">
            <summary>
            Evaluate which drag handles are currently being dragged.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Overlays.UserOverlayPaintEventArgs.DragHandle">
            <summary>
            If <see cref="P:Stemmer.Cvb.Aux.Overlays.PaintEventArgs.Dragging"/> 
            is <c>true</c>, then this property gives the index in the 
            <see cref="P:Stemmer.Cvb.Aux.Overlays.PaintEventArgs.Vertices"/> array 
            of the handle that is currently being dragged. If no vertex is being 
            dragged, then this property will be -1, if all handles are being 
            dragged then this property will be identical with the length of the 
            <see cref="P:Stemmer.Cvb.Aux.Overlays.PaintEventArgs.Vertices"/> array.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.VisualTools.NamespaceDoc">
            <summary>
            <c>Stemmer.Cvb.Forms.VisualTools</c> contains base class definitions
            for interactive tools that are visible and movable on a 
            <see cref="T:Stemmer.Cvb.Forms.Controls.Display"/> control and whose execution logic is to be
            implemented in a derived class.
            </summary>  
        </member>
        <member name="T:Stemmer.Cvb.Forms.VisualTools.VisualArea2DClassicToolBase`1">
            <summary>
            Base class for Visual Tool objects that work on a Rect.
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualArea2DClassicToolBase`1.#ctor(System.String,System.Boolean,System.Boolean,Stemmer.Cvb.Area2D,System.Drawing.Color)">
            <summary>
            Construct an Area2D-based tool.
            </summary>
            <param name="statusLineText">text to display in the Display's status
            line while the mouse is hovering above the tool</param>
            <param name="canDrag">dragable flag</param>
            <param name="xorPaint">paint mode flag</param>
            <param name="area">area to paint</param>
            <param name="areaColor">color to use for the area
            </param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualArea2DClassicToolBase`1.AreaColor">
            <summary>
            Color to be used for painting the area. Note that changes to
            this property will not be reflected in the tool's visualization until
            it has been repainted.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualArea2DClassicToolBase`1.Color">
            <summary>
            Override the base class property "Color" to have the same meaning as
            RectColor.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualArea2DClassicToolBase`1.Area2D">
            <summary>
            The Area2D currently covered by this tool.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualArea2DClassicToolBase`1.ForceRectangle(Stemmer.Cvb.Forms.Overlays.UserOverlayPaintEventArgs)">
            <summary>
            Correct the vertices in the event arguments so that they remain a
            perpendicular rectangle.
            </summary>
            <param name="args">event arguments with the vertices to be corrected
            </param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualArea2DClassicToolBase`1.PaintRectangle(Stemmer.Cvb.Forms.Overlays.UserOverlayPaintEventArgs)">
            <summary>
            Paint the rump of the rectangle.
            </summary>
            <param name="args">paint event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualArea2DClassicToolBase`1.PaintDragHandles(Stemmer.Cvb.Forms.Overlays.UserOverlayPaintEventArgs)">
            <summary>
            Paint the three drag handles of the rectangle
            </summary>
            <param name="args">paint event arguments</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualArea2DClassicToolBase`1.OnPaint(Stemmer.Cvb.Forms.Overlays.UserOverlayPaintEventArgs)">
            <summary>
            Paint the line and the drag handles.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="T:Stemmer.Cvb.Forms.VisualTools.VisualArea2DToolBase`1">
            <summary>
            Base class for Visual Tool objects that work on a Rect.
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualArea2DToolBase`1.#ctor(System.String,System.Boolean,System.Boolean,Stemmer.Cvb.Area2D,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Construct an Area2D-based tool.
            </summary>
            <param name="statusLineText">text to display in the Display's status
            line while the mouse is hovering above the tool</param>
            <param name="canDrag">dragable flag</param>
            <param name="xorPaint">paint mode flag</param>
            <param name="area">Area to paint</param>
            <param name="dragHandleColor">color to use for the drag handles
            </param>
            <param name="areaColor">color to use for the end rectangle</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualArea2DToolBase`1.DragHandleColor">
            <summary>
            Color to be used for painting the drag handles. Note that changes to
            this property will not be reflected in the tool's visualization until
            it has been repainted.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualArea2DToolBase`1.PaintDragHandles(Stemmer.Cvb.Forms.Overlays.UserOverlayPaintEventArgs)">
            <summary>
            Paint the three drag handles of the rectangle
            </summary>
            <param name="args">paint event arguments</param>
        </member>
        <member name="T:Stemmer.Cvb.Forms.VisualTools.VisualLineToolBase`1">
            <summary>
            Base class for Visual Tool objects that work on a line.
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualLineToolBase`1.#ctor(System.String,System.Boolean,System.Boolean,System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Construct a line-based tool.
            </summary>
            <param name="statusLineText">text to display in the Display's status
            line while the mouse is hovering above the tool</param>
            <param name="canDrag">dragable flag</param>
            <param name="xorPaint">paint mode flag</param>
            <param name="ptStart">start point</param>
            <param name="ptEnd">end point</param>
            <param name="startPointColor">color to use for the start point</param>
            <param name="endPointColor">color to use for the end point</param>
            <param name="lineColor">color to use for the line</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualLineToolBase`1.StartPointColor">
            <summary>
            Color to be used for painting the start point. Note that changes to
            this property will not be reflected in the tool's visualization until
            it has been repainted.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualLineToolBase`1.EndPointColor">
            <summary>
            Color to be used for painting the end point. Note that changes to
            this property will not be reflected in the tool's visualization until
            it has been repainted.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualLineToolBase`1.LineColor">
            <summary>
            Color to be used for painting the line. Note that changes to
            this property will not be reflected in the tool's visualization until
            it has been repainted.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualLineToolBase`1.Color">
            <summary>
            Override the base class property "Color" to have the same meaning as
            LineColor.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualLineToolBase`1.StartPoint">
            <summary>
            The current start point location of the tool.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualLineToolBase`1.EndPoint">
            <summary>
            The current end point location of the tool.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualLineToolBase`1.OnPaint(Stemmer.Cvb.Forms.Overlays.UserOverlayPaintEventArgs)">
            <summary>
            Paint the line and the drag handles.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="T:Stemmer.Cvb.Forms.VisualTools.VisualRectToolBase`1">
            <summary>
            Base class for Visual Tool objects that work on a Rect.
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualRectToolBase`1.#ctor(System.String,System.Boolean,System.Boolean,Stemmer.Cvb.Rect,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Construct a rect-based tool.
            </summary>
            <param name="statusLineText">text to display in the Display's status
            line while the mouse is hovering above the tool</param>
            <param name="canDrag">dragable flag</param>
            <param name="xorPaint">paint mode flag</param>
            <param name="rect">Rect to paint</param>
            <param name="dragHandleColor">color to use for the drag handles
            </param>
            <param name="rectColor">color to use for the end rectangle</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualRectToolBase`1.DragHandleColor">
            <summary>
            Color to be used for painting the start point. Note that changes to
            this property will not be reflected in the tool's visualization until
            it has been repainted.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualRectToolBase`1.RectColor">
            <summary>
            Color to be used for painting the line. Note that changes to
            this property will not be reflected in the tool's visualization until
            it has been repainted.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualRectToolBase`1.Color">
            <summary>
            Override the base class property "Color" to have the same meaning as
            RectColor.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualRectToolBase`1.Rect">
            <summary>
            The Rect currently covered by this tool.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualRectToolBase`1.OnPaint(Stemmer.Cvb.Forms.Overlays.UserOverlayPaintEventArgs)">
            <summary>
            Paint the line and the drag handles.
            </summary>
            <param name="args">event arguments</param>
        </member>
        <member name="T:Stemmer.Cvb.Forms.VisualTools.HandleStyle">
            <summary>
            Paint style to use for the drag handles of VisualTool objects.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.VisualTools.HandleStyle.None">
            <summary>
            do not paint handles at all
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.VisualTools.HandleStyle.Cross">
            <summary>
            Paint an upright cross as the handle
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.VisualTools.HandleStyle.RotatedCross">
            <summary>
            Paint a cross rotated by 45° as the handle
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.VisualTools.HandleStyle.Dot">
            <summary>
            Paint a dot (effectively a very small circle) as the handle
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.VisualTools.HandleStyle.Box">
            <summary>
            Paint a box (effectively a very small rectangle) as the handle
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1">
            <summary>
            Base class for all Visual Tool Objects.
            </summary>
            <typeparam name="TResult">type of results returned by this tool object
            </typeparam>
        </member>
        <member name="F:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.DragHandleSnapInRadius">
            <summary>
            Default size for drag handles (in DC pixels). This is the value that
            is used by the Display DLL to determine the snap-in radius of the
            drag handles belonging to a user object (and a VisualTool object is
            nothing but a user object from the Display DLL's point of view).
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.DragHandleSizeDefault">
            <summary>
            Default size to use for painting visible drag handles.
            </summary>
        </member>
        <member name="F:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.DragHandleStyleDefault">
            <summary>
            Default style to use for painting visible drag handles.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.PaintDragHandle(System.Drawing.Point,System.Drawing.Color,System.Int32,Stemmer.Cvb.Forms.VisualTools.HandleStyle,Stemmer.Cvb.Aux.Drawing.UnmanagedGraphics)">
            <summary>
            Paint the drag handle of a visual tool object.
            </summary>
            <param name="pos">position at which to paint the handle; note that
            this is interpreted in Client coordinates, not in image coordinates!
            </param>
            <param name="color">color to use for painting the handle</param>
            <param name="size">size of the handle in DC pixels</param>
            <param name="style">style of the handle</param>
            <param name="dc">dc to paint to</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Drawing.Point[],System.Windows.Forms.Cursor[])">
            <summary>
            Ctor.
            </summary>
            <param name="statusLineText">text to be displayed in the status line
            when the mouse pointer hovers over the object</param>
            <param name="canDrag">indicates whether or not the object is
            dragable</param>
            <param name="xorPaint">indicates whether or not the object should be
            painted in xor mode</param>
            <param name="vertices">vertices of the object</param>
            <param name="addCenterVertex">when <code>true</code>, and additional
            drag handle will be created automatically in the object's center of
            mass</param>
            <param name="cursors">array of cursors to use for the drag handles
            (may be null, in which case the default drag handle cursor will be
            used; if the array is not long enough, it will be filled up with
            default drag handle cursor entries internally)</param>
        </member>
        <member name="F:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.lastResult_">
            <summary>
            Field memorizing the result from the last tool run.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.Result">
            <summary>
            Untyped get accessor for the last calculation result. Untyped results
            are - although access is a bit more complicated - sometimes more 
            convenient for example in this case when building generic result
            views.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.TypedResult">
            <summary>
            Get the typed version of the calculation result (sometimes easier to
            access than the untyped version).
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.ResultType">
            <summary>
            Get the type of the result returned by this VisualToolBase.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.DragHandleStyle">
            <summary>
            Style to be used for painting visible drag handles. Note that changes 
            to this property will not be reflected in the tool's visualization 
            until it has been repainted.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.DragHandleSize">
            <summary>
            Size to be used for painting visible drag handles. Note that changes 
            to this property will not be reflected in the tool's visualization 
            until it has been repainted.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.PaintDragHandle(System.Drawing.Point,System.Drawing.Color,Stemmer.Cvb.Aux.Drawing.UnmanagedGraphics)">
            <summary>
            Member version of the PaintDragHandle method that defaults to the
            currently set drag handle size and style.
            </summary>
            <param name="pos">position to paint at</param>
            <param name="color">color to use</param>
            <param name="dc">dc to paint to</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.Execute">
            <summary>
            Execute the tool with its current settings. Execution will raise the
            <see cref="E:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.ResultUpdated"/> event, unless 
            <see cref="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.OnResultUpdated(Stemmer.Cvb.Forms.VisualTools.VisualToolEventArgs)"/> has been overridden and modified to not
            do this. In case you override this method, be aware that this is the
            method executed every time the VisualToolBase's <see cref="P:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.Result"/>
            needs to be updated - for example when the tool has been moved.
            In case an error occurs during calculation, the
            <see cref="E:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.ExecutionError"/> event will be raised.
            Execution will happen automatically every time something happens to 
            the VisualToolBase object. If something happens to the image (new 
            image content or new image) execution must be triggered by calling 
            this Execute method.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.OnExecute">
            <summary>
            Override this function to provide the tool's implementation here. If
            something goes wrong during execution, simply throw an exception in 
            the implementation of this function. This exception will be caught and
            passed on by means of the ExecutionError event.
            </summary>
            <returns>The tool's execution result.</returns>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.OnResultUpdated(Stemmer.Cvb.Forms.VisualTools.VisualToolEventArgs)">
            <summary>
            Routing function that invokes the <see cref="E:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.ResultUpdated"/> event.
            Override this function to react directly to this even in a child class
            (but don't forget to call <code>base.OnResultUpdated</code>, otherwise
            the event will not be raised.
            </summary>
            <param name="args">event arguments giving more details</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.OnExecutionError(Stemmer.Cvb.Forms.VisualTools.VisualToolErrorEventArgs)">
            <summary>
            Routing function that invokes the <see cref="E:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.ExecutionError"/> event.
            Override this function to react directly to this event in a child 
            class (but don't forget to call <code>base.OnExecutionError</code>, 
            otherwise the event will not be raised.
            </summary>
            <param name="args">event arguments giving more details</param>
        </member>
        <member name="E:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.ResultUpdated">
            <summary>
            Event that informs about updated results (either because the object
            has been moved or parameters changed, or because the 
            <see cref="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.Execute"/> method has been called.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.ExecutionError">
            <summary>
            Event that informs about execution errors. If an error occurs during
            execution of this VisualToolBase object, the ExecutionError
            event will raised instead of the <see cref="E:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.ResultUpdated"/> event.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.Click">
            <summary>
            Event that is raised after this VisualTool object has been clicked.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.Drag">
            <summary>
            Event that is raised while this visual tool object is being dragged.
            </summary>
        </member>
        <member name="E:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.Dragged">
            <summary>
            Event that is raised after this visual tool object has been dragged.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.Overlay_ConnectedToDisplay">
            <summary>
            Established a connection with a new display.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.OnDisconnectFromDisplay">
            <summary>
            About to sever the connection between this object and a display...
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.Parent_UserOverlayDragged(System.Object,Stemmer.Cvb.Forms.Controls.UserOverlayEventArgs)">
            <summary>
            Filter and forward the <see cref="E:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.Dragged"/> event for this visual 
            tool.
            </summary>
            <param name="sender">event sender</param>
            <param name="e">event argument</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.OnDragged">
            <summary>
            Overrideable version of the OnDragged event.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.Parent_UserOverlayDrag(System.Object,Stemmer.Cvb.Forms.Controls.UserOverlayEventArgs)">
            <summary>
            Filter and forward the <see cref="E:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.Drag"/> event for this visual 
            tool.
            </summary>
            <param name="sender">event sender</param>
            <param name="e">event argument</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.OnDrag">
            <summary>
            Overrideable version of the OnDrag event.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.Parent_UserOverlayClicked(System.Object,Stemmer.Cvb.Forms.Controls.UserOverlayEventArgs)">
            <summary>
            Filter and forward the <see cref="E:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.Click"/> event for this visual 
            tool.
            </summary>
            <param name="sender">event sender</param>
            <param name="e">event argument</param>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolBase`1.OnClick">
            <summary>
            Overrideable version of the OnClick event.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.VisualTools.VisualToolEventArgs">
            <summary>
            Event arguments class used by VisualToolBase-derived
            objects.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolEventArgs.#ctor(System.Object)">
            <summary>
            ctor
            </summary>
            <param name="result">result object to be published</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualToolEventArgs.Result">
            <summary>
            Result that has been updated.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.VisualTools.VisualToolErrorEventArgs">
            <summary>
            Error Event arguments class used by VisualToolBase-
            derived objects.
            </summary>
        </member>
        <member name="M:Stemmer.Cvb.Forms.VisualTools.VisualToolErrorEventArgs.#ctor(System.Exception)">
            <summary>
            ctor
            </summary>
            <param name="e">exception that has been caught</param>
        </member>
        <member name="P:Stemmer.Cvb.Forms.VisualTools.VisualToolErrorEventArgs.Exception">
            <summary>
            The exception that has been thrown whilst executing this 
            VisualToolBase's calculation.
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.DisplayLib">
            <summary>
            Import of methods exported by CVCDisp.dll
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.Forms.Properties.Messages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.DataTypePlaneMismatch">
            <summary>
              Looks up a localized string similar to Not all image planes have the same data type..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.EntityInaccessible">
            <summary>
              Looks up a localized string similar to The {0} cannot currently be accessed..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.FileNotFound">
            <summary>
              Looks up a localized string similar to The {0} file &apos;{1}&apos; does not exist..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.GenericObjectDisposed">
            <summary>
              Looks up a localized string similar to The {0} object has already been disposed of and may not be used any longer..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.ImplementationError">
            <summary>
              Looks up a localized string similar to An internal error occurred. Please report this to support@stemmer-imaging.de along with the call stack if possible..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.InformationMissing">
            <summary>
              Looks up a localized string similar to The required information for {0} is missing..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.InsufficientData">
            <summary>
              Looks up a localized string similar to Not enough data for {0}..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.InvalidCombination">
            <summary>
              Looks up a localized string similar to The options {0} and {1} cannot be combined in the same operation..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.LinearOnly">
            <summary>
              Looks up a localized string similar to Operation {0} only supported on linear VPATs..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.LoadFailure">
            <summary>
              Looks up a localized string similar to Loading the {0} from file {1} failed..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.NoInterface">
            <summary>
              Looks up a localized string similar to Device does not support Interface {0}..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.OutsideImage">
            <summary>
              Looks up a localized string similar to {0} must be located inside the image (location: {1}, image size: {2}).
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.PixelFormatNotSupported">
            <summary>
              Looks up a localized string similar to The pixel format {0} is not supported..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.ReadOnlyCollection">
            <summary>
              Looks up a localized string similar to This {0} collection is read-only..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.SaveFailure">
            <summary>
              Looks up a localized string similar to Saving the {0} to file {1} failed..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.ThreadContext">
            <summary>
              Looks up a localized string similar to Control {0} accessed from a thread other than the thread it was created on..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.UnsupportedValue">
            <summary>
              Looks up a localized string similar to {0} is not in the supported range [{1}]..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.ValueOutOfRange">
            <summary>
              Looks up a localized string similar to Value is out of range ({0} &lt;= {1} &lt; {2})..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.VisualToolHasNoDisplayParent">
            <summary>
              Looks up a localized string similar to This Visual Tool currently has no display parent..
            </summary>
        </member>
        <member name="P:Stemmer.Cvb.Forms.Properties.Messages.VisualToolHasNoImage">
            <summary>
              Looks up a localized string similar to This Visual Tool&apos;s display parent currently has no image..
            </summary>
        </member>
        <member name="T:Stemmer.Cvb.VPAEntry">
            VPAT entry storage
        </member>
        <member name="T:Stemmer.Cvb.ImgLib">
            <summary>
            Internal class holding the method specifications and types for p/invoke.
            </summary>
        </member>
    </members>
</doc>
